{"id":"node_modules/phaser/src/display/color/HSVToRGB.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./GetColor","loc":{"line":7,"column":23,"index":204},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/display/color/HSVToRGB.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/display/color/GetColor.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetColor = require('./GetColor');\n\n/**\n * RGB space conversion.\n *\n * @ignore\n *\n * @param {number} n - The value to convert.\n * @param {number} h - The h value.\n * @param {number} s - The s value.\n * @param {number} v - The v value.\n *\n * @return {number} The converted value.\n */\nfunction ConvertValue (n, h, s, v)\n{\n    var k = (n + h * 6) % 6;\n\n    var min = Math.min(k, 4 - k, 1);\n\n    return Math.round(255 * (v - v * s * Math.max(0, min)));\n}\n\n/**\n * Converts a HSV (hue, saturation and value) color set to RGB.\n *\n * Conversion formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * Assumes HSV values are contained in the set [0, 1].\n *\n * @function Phaser.Display.Color.HSVToRGB\n * @since 3.0.0\n *\n * @param {number} h - The hue, in the range 0 - 1. This is the base color.\n * @param {number} s - The saturation, in the range 0 - 1. This controls how much of the hue will be in the final color, where 1 is fully saturated and 0 will give you white.\n * @param {number} v - The value, in the range 0 - 1. This controls how dark the color is. Where 1 is as bright as possible and 0 is black.\n * @param {(Phaser.Types.Display.ColorObject|Phaser.Display.Color)} [out] - A Color object to store the results in. If not given a new ColorObject will be created.\n *\n * @return {(Phaser.Types.Display.ColorObject|Phaser.Display.Color)} An object with the red, green and blue values set in the r, g and b properties.\n */\nvar HSVToRGB = function (h, s, v, out)\n{\n    if (s === undefined) { s = 1; }\n    if (v === undefined) { v = 1; }\n\n    var r = ConvertValue(5, h, s, v);\n    var g = ConvertValue(3, h, s, v);\n    var b = ConvertValue(1, h, s, v);\n\n    if (!out)\n    {\n        return { r: r, g: g, b: b, color: GetColor(r, g, b) };\n    }\n    else if (out.setTo)\n    {\n        return out.setTo(r, g, b, out.alpha, true);\n    }\n    else\n    {\n        out.r = r;\n        out.g = g;\n        out.b = b;\n        out.color = GetColor(r, g, b);\n\n        return out;\n    }\n};\n\nmodule.exports = HSVToRGB;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/display/color/HSVToRGB.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"node_modules/phaser/src/display/color/HSVToRGB.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetColor = require('./GetColor');\n\n/**\n * RGB space conversion.\n *\n * @ignore\n *\n * @param {number} n - The value to convert.\n * @param {number} h - The h value.\n * @param {number} s - The s value.\n * @param {number} v - The v value.\n *\n * @return {number} The converted value.\n */\nfunction ConvertValue (n, h, s, v)\n{\n    var k = (n + h * 6) % 6;\n\n    var min = Math.min(k, 4 - k, 1);\n\n    return Math.round(255 * (v - v * s * Math.max(0, min)));\n}\n\n/**\n * Converts a HSV (hue, saturation and value) color set to RGB.\n *\n * Conversion formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * Assumes HSV values are contained in the set [0, 1].\n *\n * @function Phaser.Display.Color.HSVToRGB\n * @since 3.0.0\n *\n * @param {number} h - The hue, in the range 0 - 1. This is the base color.\n * @param {number} s - The saturation, in the range 0 - 1. This controls how much of the hue will be in the final color, where 1 is fully saturated and 0 will give you white.\n * @param {number} v - The value, in the range 0 - 1. This controls how dark the color is. Where 1 is as bright as possible and 0 is black.\n * @param {(Phaser.Types.Display.ColorObject|Phaser.Display.Color)} [out] - A Color object to store the results in. If not given a new ColorObject will be created.\n *\n * @return {(Phaser.Types.Display.ColorObject|Phaser.Display.Color)} An object with the red, green and blue values set in the r, g and b properties.\n */\nvar HSVToRGB = function (h, s, v, out)\n{\n    if (s === undefined) { s = 1; }\n    if (v === undefined) { v = 1; }\n\n    var r = ConvertValue(5, h, s, v);\n    var g = ConvertValue(3, h, s, v);\n    var b = ConvertValue(1, h, s, v);\n\n    if (!out)\n    {\n        return { r: r, g: g, b: b, color: GetColor(r, g, b) };\n    }\n    else if (out.setTo)\n    {\n        return out.setTo(r, g, b, out.alpha, true);\n    }\n    else\n    {\n        out.r = r;\n        out.g = g;\n        out.b = b;\n        out.color = GetColor(r, g, b);\n\n        return out;\n    }\n};\n\nmodule.exports = HSVToRGB;\n"},"lineCount":76}},"error":null,"hash":"7e7fe220ec4a6d4c301087dc1ced7f8f","cacheData":{"env":{}}}
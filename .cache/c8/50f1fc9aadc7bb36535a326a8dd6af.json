{"id":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"../../display/color/GetColor","loc":{"line":7,"column":23,"index":204},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/display/color/GetColor.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetColor = require('../../display/color/GetColor');\n\n/**\n * Takes a Wavefront Material file and extracts the diffuse reflectivity of the named\n * materials, converts them to integer color values and returns them.\n *\n * This is used internally by the `addOBJ` and `addModel` methods, but is exposed for\n * public consumption as well.\n *\n * Note this only works with diffuse values, specified in the `Kd r g b` format, where\n * `g` and `b` are optional, but `r` is required. It does not support spectral rfl files,\n * or any other material statement (such as `Ka` or `Ks`)\n *\n * @method Phaser.Geom.Mesh.ParseObjMaterial\n * @since 3.50.0\n *\n * @param {string} mtl - The OBJ MTL file as a raw string, i.e. loaded via `this.load.text`.\n *\n * @return {object} The parsed material colors, where each property of the object matches the material name.\n */\nvar ParseObjMaterial = function (mtl)\n{\n    var output = {};\n\n    var lines = mtl.split('\\n');\n\n    var currentMaterial = '';\n\n    for (var i = 0; i < lines.length; i++)\n    {\n        var line = lines[i].trim();\n\n        if (line.indexOf('#') === 0 || line === '')\n        {\n            continue;\n        }\n\n        var lineItems = line.replace(/\\s\\s+/g, ' ').trim().split(' ');\n\n        switch (lineItems[0].toLowerCase())\n        {\n            case 'newmtl':\n            {\n                currentMaterial = lineItems[1];\n                break;\n            }\n\n            //  The diffuse reflectivity of the current material\n            //  Support r, [g], [b] format, where g and b are optional\n            case 'kd':\n            {\n                var r = Math.floor(lineItems[1] * 255);\n                var g = (lineItems.length >= 2) ? Math.floor(lineItems[2] * 255) : r;\n                var b = (lineItems.length >= 3) ? Math.floor(lineItems[3] * 255) : r;\n\n                output[currentMaterial] = GetColor(r, g, b);\n\n                break;\n            }\n        }\n    }\n\n    return output;\n};\n\nmodule.exports = ParseObjMaterial;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/phaser/src/geom/mesh/ParseObjMaterial.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetColor = require('../../display/color/GetColor');\n\n/**\n * Takes a Wavefront Material file and extracts the diffuse reflectivity of the named\n * materials, converts them to integer color values and returns them.\n *\n * This is used internally by the `addOBJ` and `addModel` methods, but is exposed for\n * public consumption as well.\n *\n * Note this only works with diffuse values, specified in the `Kd r g b` format, where\n * `g` and `b` are optional, but `r` is required. It does not support spectral rfl files,\n * or any other material statement (such as `Ka` or `Ks`)\n *\n * @method Phaser.Geom.Mesh.ParseObjMaterial\n * @since 3.50.0\n *\n * @param {string} mtl - The OBJ MTL file as a raw string, i.e. loaded via `this.load.text`.\n *\n * @return {object} The parsed material colors, where each property of the object matches the material name.\n */\nvar ParseObjMaterial = function (mtl)\n{\n    var output = {};\n\n    var lines = mtl.split('\\n');\n\n    var currentMaterial = '';\n\n    for (var i = 0; i < lines.length; i++)\n    {\n        var line = lines[i].trim();\n\n        if (line.indexOf('#') === 0 || line === '')\n        {\n            continue;\n        }\n\n        var lineItems = line.replace(/\\s\\s+/g, ' ').trim().split(' ');\n\n        switch (lineItems[0].toLowerCase())\n        {\n            case 'newmtl':\n            {\n                currentMaterial = lineItems[1];\n                break;\n            }\n\n            //  The diffuse reflectivity of the current material\n            //  Support r, [g], [b] format, where g and b are optional\n            case 'kd':\n            {\n                var r = Math.floor(lineItems[1] * 255);\n                var g = (lineItems.length >= 2) ? Math.floor(lineItems[2] * 255) : r;\n                var b = (lineItems.length >= 3) ? Math.floor(lineItems[3] * 255) : r;\n\n                output[currentMaterial] = GetColor(r, g, b);\n\n                break;\n            }\n        }\n    }\n\n    return output;\n};\n\nmodule.exports = ParseObjMaterial;\n"},"lineCount":73}},"error":null,"hash":"f6a274be5175aabb2dd493d8f0317262","cacheData":{"env":{}}}
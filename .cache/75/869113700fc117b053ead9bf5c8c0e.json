{"id":"node_modules/phaser/src/renderer/webgl/Utils.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Felipe Alfonso <@bitnenfer>\n * @author       Matthew Groves <@doormat>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * @namespace Phaser.Renderer.WebGL.Utils\n * @since 3.0.0\n */\nmodule.exports = {\n\n    /**\n     * Packs four floats on a range from 0.0 to 1.0 into a single Uint32\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getTintFromFloats\n     * @since 3.0.0\n     *\n     * @param {number} r - Red component in a range from 0.0 to 1.0\n     * @param {number} g - Green component in a range from 0.0 to 1.0\n     * @param {number} b - Blue component in a range from 0.0 to 1.0\n     * @param {number} a - Alpha component in a range from 0.0 to 1.0\n     *\n     * @return {number} The packed RGBA values as a Uint32.\n     */\n    getTintFromFloats: function (r, g, b, a)\n    {\n        var ur = ((r * 255) | 0) & 0xff;\n        var ug = ((g * 255) | 0) & 0xff;\n        var ub = ((b * 255) | 0) & 0xff;\n        var ua = ((a * 255) | 0) & 0xff;\n\n        return ((ua << 24) | (ur << 16) | (ug << 8) | ub) >>> 0;\n    },\n\n    /**\n     * Packs a Uint24, representing RGB components, with a Float32, representing\n     * the alpha component, with a range between 0.0 and 1.0 and return a Uint32\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getTintAppendFloatAlpha\n     * @since 3.0.0\n     *\n     * @param {number} rgb - Uint24 representing RGB components\n     * @param {number} a - Float32 representing Alpha component\n     *\n     * @return {number} Packed RGBA as Uint32\n     */\n    getTintAppendFloatAlpha: function (rgb, a)\n    {\n        var ua = ((a * 255) | 0) & 0xff;\n\n        return ((ua << 24) | rgb) >>> 0;\n    },\n\n    /**\n     * Packs a Uint24, representing RGB components, with a Float32, representing\n     * the alpha component, with a range between 0.0 and 1.0 and return a\n     * swizzled Uint32\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getTintAppendFloatAlphaAndSwap\n     * @since 3.0.0\n     *\n     * @param {number} rgb - Uint24 representing RGB components\n     * @param {number} a - Float32 representing Alpha component\n     *\n     * @return {number} Packed RGBA as Uint32\n     */\n    getTintAppendFloatAlphaAndSwap: function (rgb, a)\n    {\n        var ur = ((rgb >> 16) | 0) & 0xff;\n        var ug = ((rgb >> 8) | 0) & 0xff;\n        var ub = (rgb | 0) & 0xff;\n        var ua = ((a * 255) | 0) & 0xff;\n\n        return ((ua << 24) | (ub << 16) | (ug << 8) | ur) >>> 0;\n    },\n\n    /**\n     * Unpacks a Uint24 RGB into an array of floats of ranges of 0.0 and 1.0\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getFloatsFromUintRGB\n     * @since 3.0.0\n     *\n     * @param {number} rgb - RGB packed as a Uint24\n     *\n     * @return {array} Array of floats representing each component as a float\n     */\n    getFloatsFromUintRGB: function (rgb)\n    {\n        var ur = ((rgb >> 16) | 0) & 0xff;\n        var ug = ((rgb >> 8) | 0) & 0xff;\n        var ub = (rgb | 0) & 0xff;\n\n        return [ ur / 255, ug / 255, ub / 255 ];\n    },\n\n    /**\n     * Check to see how many texture units the GPU supports in a fragment shader\n     * and if the value specific in the game config is allowed.\n     *\n     * This value is hard-clamped to 16 for performance reasons on Android devices.\n     *\n     * @function Phaser.Renderer.WebGL.Utils.checkShaderMax\n     * @since 3.50.0\n     *\n     * @param {WebGLRenderingContext} gl - The WebGLContext used to create the shaders.\n     * @param {number} maxTextures - The Game Config maxTextures value.\n     *\n     * @return {number} The number of texture units that is supported by this browser and GPU.\n     */\n    checkShaderMax: function (gl, maxTextures)\n    {\n        //  Note: This is the maximum number of TIUs that a _fragment_ shader supports\n        //  https://www.khronos.org/opengl/wiki/Common_Mistakes#Texture_Unit\n\n        //  Hard-clamp this to 16 to avoid run-away texture counts such as on Android\n        var gpuMax = Math.min(16, gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n\n        if (!maxTextures || maxTextures === -1)\n        {\n            return gpuMax;\n        }\n        else\n        {\n            return Math.min(gpuMax, maxTextures);\n        }\n    },\n\n    /**\n     * Checks the given Fragment Shader Source for `%count%` and `%forloop%` declarations and\n     * replaces those with GLSL code for setting `texture = texture2D(uMainSampler[i], outTexCoord)`.\n     *\n     * @function Phaser.Renderer.WebGL.Utils.parseFragmentShaderMaxTextures\n     * @since 3.50.0\n     *\n     * @param {string} fragmentShaderSource - The Fragment Shader source code to operate on.\n     * @param {number} maxTextures - The number of maxTextures value.\n     *\n     * @return {string} The modified Fragment Shader source.\n     */\n    parseFragmentShaderMaxTextures: function (fragmentShaderSource, maxTextures)\n    {\n        if (!fragmentShaderSource)\n        {\n            return '';\n        }\n\n        var src = '';\n\n        for (var i = 0; i < maxTextures; i++)\n        {\n            if (i > 0)\n            {\n                src += '\\n\\telse ';\n            }\n\n            if (i < maxTextures - 1)\n            {\n                src += 'if (outTexId < ' + i + '.5)';\n            }\n\n            src += '\\n\\t{';\n            src += '\\n\\t\\ttexture = texture2D(uMainSampler[' + i + '], outTexCoord);';\n            src += '\\n\\t}';\n        }\n\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, maxTextures.toString());\n\n        return fragmentShaderSource.replace(/%forloop%/gi, src);\n    },\n\n    /**\n     * Takes the Glow FX Shader source and parses out the __SIZE__ and __DIST__\n     * consts with the configuration values.\n     *\n     * @function Phaser.Renderer.WebGL.Utils.setGlowQuality\n     * @since 3.60.0\n     *\n     * @param {string} shader - The Fragment Shader source code to operate on.\n     * @param {Phaser.Game} game - The Phaser Game instance.\n     * @param {number} [quality] - The quality of the glow (defaults to 0.1)\n     * @param {number} [distance] - The distance of the glow (defaults to 10)\n     *\n     * @return {string} The modified Fragment Shader source.\n     */\n    setGlowQuality: function (shader, game, quality, distance)\n    {\n        if (quality === undefined)\n        {\n            quality = game.config.glowFXQuality;\n        }\n\n        if (distance === undefined)\n        {\n            distance = game.config.glowFXDistance;\n        }\n\n        shader = shader.replace(/__SIZE__/gi, (1 / quality / distance).toFixed(7));\n        shader = shader.replace(/__DIST__/gi, distance.toFixed(0) + '.0');\n\n        return shader;\n    }\n\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/renderer/webgl/Utils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}}],"sources":{"node_modules/phaser/src/renderer/webgl/Utils.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @author       Felipe Alfonso <@bitnenfer>\n * @author       Matthew Groves <@doormat>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * @namespace Phaser.Renderer.WebGL.Utils\n * @since 3.0.0\n */\nmodule.exports = {\n\n    /**\n     * Packs four floats on a range from 0.0 to 1.0 into a single Uint32\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getTintFromFloats\n     * @since 3.0.0\n     *\n     * @param {number} r - Red component in a range from 0.0 to 1.0\n     * @param {number} g - Green component in a range from 0.0 to 1.0\n     * @param {number} b - Blue component in a range from 0.0 to 1.0\n     * @param {number} a - Alpha component in a range from 0.0 to 1.0\n     *\n     * @return {number} The packed RGBA values as a Uint32.\n     */\n    getTintFromFloats: function (r, g, b, a)\n    {\n        var ur = ((r * 255) | 0) & 0xff;\n        var ug = ((g * 255) | 0) & 0xff;\n        var ub = ((b * 255) | 0) & 0xff;\n        var ua = ((a * 255) | 0) & 0xff;\n\n        return ((ua << 24) | (ur << 16) | (ug << 8) | ub) >>> 0;\n    },\n\n    /**\n     * Packs a Uint24, representing RGB components, with a Float32, representing\n     * the alpha component, with a range between 0.0 and 1.0 and return a Uint32\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getTintAppendFloatAlpha\n     * @since 3.0.0\n     *\n     * @param {number} rgb - Uint24 representing RGB components\n     * @param {number} a - Float32 representing Alpha component\n     *\n     * @return {number} Packed RGBA as Uint32\n     */\n    getTintAppendFloatAlpha: function (rgb, a)\n    {\n        var ua = ((a * 255) | 0) & 0xff;\n\n        return ((ua << 24) | rgb) >>> 0;\n    },\n\n    /**\n     * Packs a Uint24, representing RGB components, with a Float32, representing\n     * the alpha component, with a range between 0.0 and 1.0 and return a\n     * swizzled Uint32\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getTintAppendFloatAlphaAndSwap\n     * @since 3.0.0\n     *\n     * @param {number} rgb - Uint24 representing RGB components\n     * @param {number} a - Float32 representing Alpha component\n     *\n     * @return {number} Packed RGBA as Uint32\n     */\n    getTintAppendFloatAlphaAndSwap: function (rgb, a)\n    {\n        var ur = ((rgb >> 16) | 0) & 0xff;\n        var ug = ((rgb >> 8) | 0) & 0xff;\n        var ub = (rgb | 0) & 0xff;\n        var ua = ((a * 255) | 0) & 0xff;\n\n        return ((ua << 24) | (ub << 16) | (ug << 8) | ur) >>> 0;\n    },\n\n    /**\n     * Unpacks a Uint24 RGB into an array of floats of ranges of 0.0 and 1.0\n     *\n     * @function Phaser.Renderer.WebGL.Utils.getFloatsFromUintRGB\n     * @since 3.0.0\n     *\n     * @param {number} rgb - RGB packed as a Uint24\n     *\n     * @return {array} Array of floats representing each component as a float\n     */\n    getFloatsFromUintRGB: function (rgb)\n    {\n        var ur = ((rgb >> 16) | 0) & 0xff;\n        var ug = ((rgb >> 8) | 0) & 0xff;\n        var ub = (rgb | 0) & 0xff;\n\n        return [ ur / 255, ug / 255, ub / 255 ];\n    },\n\n    /**\n     * Check to see how many texture units the GPU supports in a fragment shader\n     * and if the value specific in the game config is allowed.\n     *\n     * This value is hard-clamped to 16 for performance reasons on Android devices.\n     *\n     * @function Phaser.Renderer.WebGL.Utils.checkShaderMax\n     * @since 3.50.0\n     *\n     * @param {WebGLRenderingContext} gl - The WebGLContext used to create the shaders.\n     * @param {number} maxTextures - The Game Config maxTextures value.\n     *\n     * @return {number} The number of texture units that is supported by this browser and GPU.\n     */\n    checkShaderMax: function (gl, maxTextures)\n    {\n        //  Note: This is the maximum number of TIUs that a _fragment_ shader supports\n        //  https://www.khronos.org/opengl/wiki/Common_Mistakes#Texture_Unit\n\n        //  Hard-clamp this to 16 to avoid run-away texture counts such as on Android\n        var gpuMax = Math.min(16, gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n\n        if (!maxTextures || maxTextures === -1)\n        {\n            return gpuMax;\n        }\n        else\n        {\n            return Math.min(gpuMax, maxTextures);\n        }\n    },\n\n    /**\n     * Checks the given Fragment Shader Source for `%count%` and `%forloop%` declarations and\n     * replaces those with GLSL code for setting `texture = texture2D(uMainSampler[i], outTexCoord)`.\n     *\n     * @function Phaser.Renderer.WebGL.Utils.parseFragmentShaderMaxTextures\n     * @since 3.50.0\n     *\n     * @param {string} fragmentShaderSource - The Fragment Shader source code to operate on.\n     * @param {number} maxTextures - The number of maxTextures value.\n     *\n     * @return {string} The modified Fragment Shader source.\n     */\n    parseFragmentShaderMaxTextures: function (fragmentShaderSource, maxTextures)\n    {\n        if (!fragmentShaderSource)\n        {\n            return '';\n        }\n\n        var src = '';\n\n        for (var i = 0; i < maxTextures; i++)\n        {\n            if (i > 0)\n            {\n                src += '\\n\\telse ';\n            }\n\n            if (i < maxTextures - 1)\n            {\n                src += 'if (outTexId < ' + i + '.5)';\n            }\n\n            src += '\\n\\t{';\n            src += '\\n\\t\\ttexture = texture2D(uMainSampler[' + i + '], outTexCoord);';\n            src += '\\n\\t}';\n        }\n\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, maxTextures.toString());\n\n        return fragmentShaderSource.replace(/%forloop%/gi, src);\n    },\n\n    /**\n     * Takes the Glow FX Shader source and parses out the __SIZE__ and __DIST__\n     * consts with the configuration values.\n     *\n     * @function Phaser.Renderer.WebGL.Utils.setGlowQuality\n     * @since 3.60.0\n     *\n     * @param {string} shader - The Fragment Shader source code to operate on.\n     * @param {Phaser.Game} game - The Phaser Game instance.\n     * @param {number} [quality] - The quality of the glow (defaults to 0.1)\n     * @param {number} [distance] - The distance of the glow (defaults to 10)\n     *\n     * @return {string} The modified Fragment Shader source.\n     */\n    setGlowQuality: function (shader, game, quality, distance)\n    {\n        if (quality === undefined)\n        {\n            quality = game.config.glowFXQuality;\n        }\n\n        if (distance === undefined)\n        {\n            distance = game.config.glowFXDistance;\n        }\n\n        shader = shader.replace(/__SIZE__/gi, (1 / quality / distance).toFixed(7));\n        shader = shader.replace(/__DIST__/gi, distance.toFixed(0) + '.0');\n\n        return shader;\n    }\n\n};\n"},"lineCount":207}},"error":null,"hash":"924786f774e320ab63576e25c41dd0c9","cacheData":{"env":{}}}
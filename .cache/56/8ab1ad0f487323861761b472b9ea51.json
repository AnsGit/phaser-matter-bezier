{"id":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"../triangle/ContainsArray","loc":{"line":7,"column":28,"index":209},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/triangle/ContainsArray.js"},{"name":"../triangle/Decompose","loc":{"line":8,"column":24,"index":263},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/triangle/Decompose.js"},{"name":"./LineToLine","loc":{"line":9,"column":25,"index":314},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/LineToLine.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar ContainsArray = require('../triangle/ContainsArray');\nvar Decompose = require('../triangle/Decompose');\nvar LineToLine = require('./LineToLine');\n\n/**\n * Checks if two Triangles intersect.\n *\n * A Triangle intersects another Triangle if any pair of their lines intersects or if any point of one Triangle is within the other Triangle. Thus, the Triangles are considered \"solid\".\n *\n * @function Phaser.Geom.Intersects.TriangleToTriangle\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Triangle} triangleA - The first Triangle to check for intersection.\n * @param {Phaser.Geom.Triangle} triangleB - The second Triangle to check for intersection.\n *\n * @return {boolean} `true` if the Triangles intersect, otherwise `false`.\n */\nvar TriangleToTriangle = function (triangleA, triangleB)\n{\n    //  First the cheapest ones:\n\n    if (\n        triangleA.left > triangleB.right ||\n        triangleA.right < triangleB.left ||\n        triangleA.top > triangleB.bottom ||\n        triangleA.bottom < triangleB.top)\n    {\n        return false;\n    }\n\n    var lineAA = triangleA.getLineA();\n    var lineAB = triangleA.getLineB();\n    var lineAC = triangleA.getLineC();\n\n    var lineBA = triangleB.getLineA();\n    var lineBB = triangleB.getLineB();\n    var lineBC = triangleB.getLineC();\n\n    //  Now check the lines against each line of TriangleB\n    if (LineToLine(lineAA, lineBA) || LineToLine(lineAA, lineBB) || LineToLine(lineAA, lineBC))\n    {\n        return true;\n    }\n\n    if (LineToLine(lineAB, lineBA) || LineToLine(lineAB, lineBB) || LineToLine(lineAB, lineBC))\n    {\n        return true;\n    }\n\n    if (LineToLine(lineAC, lineBA) || LineToLine(lineAC, lineBB) || LineToLine(lineAC, lineBC))\n    {\n        return true;\n    }\n\n    //  Nope, so check to see if any of the points of triangleA are within triangleB\n\n    var points = Decompose(triangleA);\n    var within = ContainsArray(triangleB, points, true);\n\n    if (within.length > 0)\n    {\n        return true;\n    }\n\n    //  Finally check to see if any of the points of triangleB are within triangleA\n\n    points = Decompose(triangleB);\n    within = ContainsArray(triangleA, points, true);\n\n    if (within.length > 0)\n    {\n        return true;\n    }\n\n    return false;\n};\n\nmodule.exports = TriangleToTriangle;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"node_modules/phaser/src/geom/intersects/TriangleToTriangle.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar ContainsArray = require('../triangle/ContainsArray');\nvar Decompose = require('../triangle/Decompose');\nvar LineToLine = require('./LineToLine');\n\n/**\n * Checks if two Triangles intersect.\n *\n * A Triangle intersects another Triangle if any pair of their lines intersects or if any point of one Triangle is within the other Triangle. Thus, the Triangles are considered \"solid\".\n *\n * @function Phaser.Geom.Intersects.TriangleToTriangle\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Triangle} triangleA - The first Triangle to check for intersection.\n * @param {Phaser.Geom.Triangle} triangleB - The second Triangle to check for intersection.\n *\n * @return {boolean} `true` if the Triangles intersect, otherwise `false`.\n */\nvar TriangleToTriangle = function (triangleA, triangleB)\n{\n    //  First the cheapest ones:\n\n    if (\n        triangleA.left > triangleB.right ||\n        triangleA.right < triangleB.left ||\n        triangleA.top > triangleB.bottom ||\n        triangleA.bottom < triangleB.top)\n    {\n        return false;\n    }\n\n    var lineAA = triangleA.getLineA();\n    var lineAB = triangleA.getLineB();\n    var lineAC = triangleA.getLineC();\n\n    var lineBA = triangleB.getLineA();\n    var lineBB = triangleB.getLineB();\n    var lineBC = triangleB.getLineC();\n\n    //  Now check the lines against each line of TriangleB\n    if (LineToLine(lineAA, lineBA) || LineToLine(lineAA, lineBB) || LineToLine(lineAA, lineBC))\n    {\n        return true;\n    }\n\n    if (LineToLine(lineAB, lineBA) || LineToLine(lineAB, lineBB) || LineToLine(lineAB, lineBC))\n    {\n        return true;\n    }\n\n    if (LineToLine(lineAC, lineBA) || LineToLine(lineAC, lineBB) || LineToLine(lineAC, lineBC))\n    {\n        return true;\n    }\n\n    //  Nope, so check to see if any of the points of triangleA are within triangleB\n\n    var points = Decompose(triangleA);\n    var within = ContainsArray(triangleB, points, true);\n\n    if (within.length > 0)\n    {\n        return true;\n    }\n\n    //  Finally check to see if any of the points of triangleB are within triangleA\n\n    points = Decompose(triangleB);\n    within = ContainsArray(triangleA, points, true);\n\n    if (within.length > 0)\n    {\n        return true;\n    }\n\n    return false;\n};\n\nmodule.exports = TriangleToTriangle;\n"},"lineCount":85}},"error":null,"hash":"73d2653f8b281ebe5999c2d393bfcf6d","cacheData":{"env":{}}}
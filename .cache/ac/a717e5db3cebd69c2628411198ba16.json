{"id":"node_modules/phaser/src/utils/array/SpliceOne.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\n * Based on code by Mike Reinstein.\n *\n * @function Phaser.Utils.Array.SpliceOne\n * @since 3.0.0\n *\n * @param {array} array - The array to splice from.\n * @param {number} index - The index of the item which should be spliced.\n *\n * @return {*} The item which was spliced (removed).\n */\nvar SpliceOne = function (array, index)\n{\n    if (index >= array.length)\n    {\n        return;\n    }\n\n    var len = array.length - 1;\n\n    var item = array[index];\n\n    for (var i = index; i < len; i++)\n    {\n        array[i] = array[i + 1];\n    }\n\n    array.length = len;\n\n    return item;\n};\n\nmodule.exports = SpliceOne;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/utils/array/SpliceOne.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/phaser/src/utils/array/SpliceOne.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Removes a single item from an array and returns it without creating gc, like the native splice does.\n * Based on code by Mike Reinstein.\n *\n * @function Phaser.Utils.Array.SpliceOne\n * @since 3.0.0\n *\n * @param {array} array - The array to splice from.\n * @param {number} index - The index of the item which should be spliced.\n *\n * @return {*} The item which was spliced (removed).\n */\nvar SpliceOne = function (array, index)\n{\n    if (index >= array.length)\n    {\n        return;\n    }\n\n    var len = array.length - 1;\n\n    var item = array[index];\n\n    for (var i = index; i < len; i++)\n    {\n        array[i] = array[i + 1];\n    }\n\n    array.length = len;\n\n    return item;\n};\n\nmodule.exports = SpliceOne;\n"},"lineCount":41}},"error":null,"hash":"661575b803829eae1aa532258d195121","cacheData":{"env":{}}}
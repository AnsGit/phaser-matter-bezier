{"id":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./TriangleToTriangle","loc":{"line":8,"column":33,"index":226},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/TriangleToTriangle.js"},{"name":"./GetTriangleToLine","loc":{"line":9,"column":32,"index":283},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/GetTriangleToLine.js"}],"generated":{"js":"/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar TriangleToTriangle = require('./TriangleToTriangle');\nvar GetTriangleToLine = require('./GetTriangleToLine');\n\n/**\n * Checks if two Triangles intersect, and returns the intersection points as a Point object array.\n *\n * A Triangle intersects another Triangle if any pair of their lines intersects or if any point of one Triangle is within the other Triangle. Thus, the Triangles are considered \"solid\".\n *\n * @function Phaser.Geom.Intersects.GetTriangleToTriangle\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Triangle} triangleA - The first Triangle to check for intersection.\n * @param {Phaser.Geom.Triangle} triangleB - The second Triangle to check for intersection.\n * @param {array} [out] - An optional array in which to store the points of intersection.\n *\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\n */\nvar GetTriangleToTriangle = function (triangleA, triangleB, out)\n{\n    if (out === undefined) { out = []; }\n\n    if (TriangleToTriangle(triangleA, triangleB))\n    {\n        var lineA = triangleB.getLineA();\n        var lineB = triangleB.getLineB();\n        var lineC = triangleB.getLineC();\n\n        GetTriangleToLine(triangleA, lineA, out);\n        GetTriangleToLine(triangleA, lineB, out);\n        GetTriangleToLine(triangleA, lineC, out);\n    }\n\n    return out;\n};\n\nmodule.exports = GetTriangleToTriangle;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/phaser/src/geom/intersects/GetTriangleToTriangle.js":"/**\n * @author       Florian Vazelle\n * @author       Geoffrey Glaive\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar TriangleToTriangle = require('./TriangleToTriangle');\nvar GetTriangleToLine = require('./GetTriangleToLine');\n\n/**\n * Checks if two Triangles intersect, and returns the intersection points as a Point object array.\n *\n * A Triangle intersects another Triangle if any pair of their lines intersects or if any point of one Triangle is within the other Triangle. Thus, the Triangles are considered \"solid\".\n *\n * @function Phaser.Geom.Intersects.GetTriangleToTriangle\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Triangle} triangleA - The first Triangle to check for intersection.\n * @param {Phaser.Geom.Triangle} triangleB - The second Triangle to check for intersection.\n * @param {array} [out] - An optional array in which to store the points of intersection.\n *\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\n */\nvar GetTriangleToTriangle = function (triangleA, triangleB, out)\n{\n    if (out === undefined) { out = []; }\n\n    if (TriangleToTriangle(triangleA, triangleB))\n    {\n        var lineA = triangleB.getLineA();\n        var lineB = triangleB.getLineB();\n        var lineC = triangleB.getLineC();\n\n        GetTriangleToLine(triangleA, lineA, out);\n        GetTriangleToLine(triangleA, lineB, out);\n        GetTriangleToLine(triangleA, lineC, out);\n    }\n\n    return out;\n};\n\nmodule.exports = GetTriangleToTriangle;\n"},"lineCount":44}},"error":null,"hash":"2d73eba569cc57b0e54b2160a6c8dd89","cacheData":{"env":{}}}
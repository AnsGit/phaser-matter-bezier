{"id":"node_modules/phaser/src/tilemaps/components/Randomize.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./GetTilesWithin","loc":{"line":7,"column":29,"index":210},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/Randomize.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/GetTilesWithin.js"},{"name":"../../utils/array/GetRandom","loc":{"line":8,"column":24,"index":255},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/Randomize.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/utils/array/GetRandom.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\nvar GetRandom = require('../../utils/array/GetRandom');\n\n/**\n * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\n * specified layer. Each tile will receive a new index. If an array of indexes is passed in, then\n * those will be used for randomly assigning new tile indexes. If an array is not provided, the\n * indexes found within the region (excluding -1) will be used for randomly assigning new tile\n * indexes. This method only modifies tile indexes and does not change collision information.\n *\n * @function Phaser.Tilemaps.Components.Randomize\n * @since 3.0.0\n *\n * @param {number} tileX - The left most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} tileY - The top most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} width - How many tiles wide from the `tileX` index the area will be.\n * @param {number} height - How many tiles tall from the `tileY` index the area will be.\n * @param {number[]} indexes - An array of indexes to randomly draw from during randomization.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n */\nvar Randomize = function (tileX, tileY, width, height, indexes, layer)\n{\n    var i;\n    var tiles = GetTilesWithin(tileX, tileY, width, height, {}, layer);\n\n    // If no indices are given, then find all the unique indexes within the specified region\n    if (!indexes)\n    {\n        indexes = [];\n\n        for (i = 0; i < tiles.length; i++)\n        {\n            if (indexes.indexOf(tiles[i].index) === -1)\n            {\n                indexes.push(tiles[i].index);\n            }\n        }\n    }\n\n    for (i = 0; i < tiles.length; i++)\n    {\n        tiles[i].index = GetRandom(indexes);\n    }\n};\n\nmodule.exports = Randomize;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/Randomize.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/Randomize.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\nvar GetRandom = require('../../utils/array/GetRandom');\n\n/**\n * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\n * specified layer. Each tile will receive a new index. If an array of indexes is passed in, then\n * those will be used for randomly assigning new tile indexes. If an array is not provided, the\n * indexes found within the region (excluding -1) will be used for randomly assigning new tile\n * indexes. This method only modifies tile indexes and does not change collision information.\n *\n * @function Phaser.Tilemaps.Components.Randomize\n * @since 3.0.0\n *\n * @param {number} tileX - The left most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} tileY - The top most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} width - How many tiles wide from the `tileX` index the area will be.\n * @param {number} height - How many tiles tall from the `tileY` index the area will be.\n * @param {number[]} indexes - An array of indexes to randomly draw from during randomization.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n */\nvar Randomize = function (tileX, tileY, width, height, indexes, layer)\n{\n    var i;\n    var tiles = GetTilesWithin(tileX, tileY, width, height, {}, layer);\n\n    // If no indices are given, then find all the unique indexes within the specified region\n    if (!indexes)\n    {\n        indexes = [];\n\n        for (i = 0; i < tiles.length; i++)\n        {\n            if (indexes.indexOf(tiles[i].index) === -1)\n            {\n                indexes.push(tiles[i].index);\n            }\n        }\n    }\n\n    for (i = 0; i < tiles.length; i++)\n    {\n        tiles[i].index = GetRandom(indexes);\n    }\n};\n\nmodule.exports = Randomize;\n"},"lineCount":53}},"error":null,"hash":"5f385bf2248fb3749860810d6da5a07a","cacheData":{"env":{}}}
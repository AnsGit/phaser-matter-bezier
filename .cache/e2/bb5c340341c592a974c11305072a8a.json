{"id":"node_modules/phaser/src/geom/circle/GetPoints.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./Circumference","loc":{"line":7,"column":28,"index":209},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/circle/GetPoints.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/circle/Circumference.js"},{"name":"./CircumferencePoint","loc":{"line":8,"column":33,"index":262},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/circle/GetPoints.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/circle/CircumferencePoint.js"},{"name":"../../math/FromPercent","loc":{"line":9,"column":26,"index":313},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/circle/GetPoints.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/math/FromPercent.js"},{"name":"../../math/const","loc":{"line":10,"column":25,"index":365},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/circle/GetPoints.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/math/const.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Circumference = require('./Circumference');\nvar CircumferencePoint = require('./CircumferencePoint');\nvar FromPercent = require('../../math/FromPercent');\nvar MATH_CONST = require('../../math/const');\n\n/**\n * Returns an array of Point objects containing the coordinates of the points around the circumference of the Circle,\n * based on the given quantity or stepRate values.\n *\n * @function Phaser.Geom.Circle.GetPoints\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Circle} circle - The Circle to get the points from.\n * @param {number} quantity - The amount of points to return. If a falsey value the quantity will be derived from the `stepRate` instead.\n * @param {number} [stepRate] - Sets the quantity by getting the circumference of the circle and dividing it by the stepRate.\n * @param {array} [output] - An array to insert the points in to. If not provided a new array will be created.\n *\n * @return {Phaser.Geom.Point[]} An array of Point objects pertaining to the points around the circumference of the circle.\n */\nvar GetPoints = function (circle, quantity, stepRate, out)\n{\n    if (out === undefined) { out = []; }\n\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\n    if (!quantity && stepRate > 0)\n    {\n        quantity = Circumference(circle) / stepRate;\n    }\n\n    for (var i = 0; i < quantity; i++)\n    {\n        var angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n\n        out.push(CircumferencePoint(circle, angle));\n    }\n\n    return out;\n};\n\nmodule.exports = GetPoints;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/geom/circle/GetPoints.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"node_modules/phaser/src/geom/circle/GetPoints.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Circumference = require('./Circumference');\nvar CircumferencePoint = require('./CircumferencePoint');\nvar FromPercent = require('../../math/FromPercent');\nvar MATH_CONST = require('../../math/const');\n\n/**\n * Returns an array of Point objects containing the coordinates of the points around the circumference of the Circle,\n * based on the given quantity or stepRate values.\n *\n * @function Phaser.Geom.Circle.GetPoints\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Circle} circle - The Circle to get the points from.\n * @param {number} quantity - The amount of points to return. If a falsey value the quantity will be derived from the `stepRate` instead.\n * @param {number} [stepRate] - Sets the quantity by getting the circumference of the circle and dividing it by the stepRate.\n * @param {array} [output] - An array to insert the points in to. If not provided a new array will be created.\n *\n * @return {Phaser.Geom.Point[]} An array of Point objects pertaining to the points around the circumference of the circle.\n */\nvar GetPoints = function (circle, quantity, stepRate, out)\n{\n    if (out === undefined) { out = []; }\n\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\n    if (!quantity && stepRate > 0)\n    {\n        quantity = Circumference(circle) / stepRate;\n    }\n\n    for (var i = 0; i < quantity; i++)\n    {\n        var angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\n\n        out.push(CircumferencePoint(circle, angle));\n    }\n\n    return out;\n};\n\nmodule.exports = GetPoints;\n"},"lineCount":47}},"error":null,"hash":"0f02714b007821f955c49d94bc5f8e73","cacheData":{"env":{}}}
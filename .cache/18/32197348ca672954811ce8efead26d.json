{"id":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./GetTilesWithin","loc":{"line":7,"column":29,"index":210},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/GetTilesWithin.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\n\n/**\n * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\n * specified layer. Each tile will receive a new index. New indexes are drawn from the given\n * weightedIndexes array. An example weighted array:\n *\n * [\n *  { index: 6, weight: 4 },    // Probability of index 6 is 4 / 8\n *  { index: 7, weight: 2 },    // Probability of index 7 would be 2 / 8\n *  { index: 8, weight: 1.5 },  // Probability of index 8 would be 1.5 / 8\n *  { index: 26, weight: 0.5 }  // Probability of index 27 would be 0.5 / 8\n * ]\n *\n * The probability of any index being choose is (the index's weight) / (sum of all weights). This\n * method only modifies tile indexes and does not change collision information.\n *\n * @function Phaser.Tilemaps.Components.WeightedRandomize\n * @since 3.0.0\n *\n * @param {number} tileX - The left most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} tileY - The top most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} width - How many tiles wide from the `tileX` index the area will be.\n * @param {number} height - How many tiles tall from the `tileY` index the area will be.\n * @param {object[]} weightedIndexes - An array of objects to randomly draw from during\n * randomization. They should be in the form: { index: 0, weight: 4 } or\n * { index: [0, 1], weight: 4 } if you wish to draw from multiple tile indexes.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n */\nvar WeightedRandomize = function (tileX, tileY, width, height, weightedIndexes, layer)\n{\n    if (!weightedIndexes) { return; }\n\n    var i;\n    var tiles = GetTilesWithin(tileX, tileY, width, height, null, layer);\n\n    var weightTotal = 0;\n\n    for (i = 0; i < weightedIndexes.length; i++)\n    {\n        weightTotal += weightedIndexes[i].weight;\n    }\n\n    if (weightTotal <= 0) { return; }\n\n    for (i = 0; i < tiles.length; i++)\n    {\n        var rand = Math.random() * weightTotal;\n        var sum = 0;\n        var randomIndex = -1;\n\n        for (var j = 0; j < weightedIndexes.length; j++)\n        {\n            sum += weightedIndexes[j].weight;\n\n            if (rand <= sum)\n            {\n                var chosen = weightedIndexes[j].index;\n\n                randomIndex = Array.isArray(chosen)\n                    ? chosen[Math.floor(Math.random() * chosen.length)]\n                    : chosen;\n                break;\n            }\n        }\n\n        tiles[i].index = randomIndex;\n    }\n};\n\nmodule.exports = WeightedRandomize;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/WeightedRandomize.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\n\n/**\n * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\n * specified layer. Each tile will receive a new index. New indexes are drawn from the given\n * weightedIndexes array. An example weighted array:\n *\n * [\n *  { index: 6, weight: 4 },    // Probability of index 6 is 4 / 8\n *  { index: 7, weight: 2 },    // Probability of index 7 would be 2 / 8\n *  { index: 8, weight: 1.5 },  // Probability of index 8 would be 1.5 / 8\n *  { index: 26, weight: 0.5 }  // Probability of index 27 would be 0.5 / 8\n * ]\n *\n * The probability of any index being choose is (the index's weight) / (sum of all weights). This\n * method only modifies tile indexes and does not change collision information.\n *\n * @function Phaser.Tilemaps.Components.WeightedRandomize\n * @since 3.0.0\n *\n * @param {number} tileX - The left most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} tileY - The top most tile index (in tile coordinates) to use as the origin of the area.\n * @param {number} width - How many tiles wide from the `tileX` index the area will be.\n * @param {number} height - How many tiles tall from the `tileY` index the area will be.\n * @param {object[]} weightedIndexes - An array of objects to randomly draw from during\n * randomization. They should be in the form: { index: 0, weight: 4 } or\n * { index: [0, 1], weight: 4 } if you wish to draw from multiple tile indexes.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n */\nvar WeightedRandomize = function (tileX, tileY, width, height, weightedIndexes, layer)\n{\n    if (!weightedIndexes) { return; }\n\n    var i;\n    var tiles = GetTilesWithin(tileX, tileY, width, height, null, layer);\n\n    var weightTotal = 0;\n\n    for (i = 0; i < weightedIndexes.length; i++)\n    {\n        weightTotal += weightedIndexes[i].weight;\n    }\n\n    if (weightTotal <= 0) { return; }\n\n    for (i = 0; i < tiles.length; i++)\n    {\n        var rand = Math.random() * weightTotal;\n        var sum = 0;\n        var randomIndex = -1;\n\n        for (var j = 0; j < weightedIndexes.length; j++)\n        {\n            sum += weightedIndexes[j].weight;\n\n            if (rand <= sum)\n            {\n                var chosen = weightedIndexes[j].index;\n\n                randomIndex = Array.isArray(chosen)\n                    ? chosen[Math.floor(Math.random() * chosen.length)]\n                    : chosen;\n                break;\n            }\n        }\n\n        tiles[i].index = randomIndex;\n    }\n};\n\nmodule.exports = WeightedRandomize;\n"},"lineCount":78}},"error":null,"hash":"9c55dffa5492ef6f7160af031e3b64a2","cacheData":{"env":{}}}
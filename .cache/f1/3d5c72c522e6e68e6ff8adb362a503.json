{"id":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./GetTileAt","loc":{"line":7,"column":24,"index":205},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/GetTileAt.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTileAt = require('./GetTileAt');\n\n/**\n * Calculates interesting faces at the given tile coordinates of the specified layer. Interesting\n * faces are used internally for optimizing collisions against tiles. This method is mostly used\n * internally to optimize recalculating faces when only one tile has been changed.\n *\n * @function Phaser.Tilemaps.Components.CalculateFacesAt\n * @since 3.0.0\n *\n * @param {number} tileX - The x coordinate.\n * @param {number} tileY - The y coordinate.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n */\nvar CalculateFacesAt = function (tileX, tileY, layer)\n{\n    var tile = GetTileAt(tileX, tileY, true, layer);\n    var above = GetTileAt(tileX, tileY - 1, true, layer);\n    var below = GetTileAt(tileX, tileY + 1, true, layer);\n    var left = GetTileAt(tileX - 1, tileY, true, layer);\n    var right = GetTileAt(tileX + 1, tileY, true, layer);\n    var tileCollides = tile && tile.collides;\n\n    // Assume the changed tile has all interesting edges\n    if (tileCollides)\n    {\n        tile.faceTop = true;\n        tile.faceBottom = true;\n        tile.faceLeft = true;\n        tile.faceRight = true;\n    }\n\n    // Reset edges that are shared between tile and its neighbors\n    if (above && above.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceTop = false;\n        }\n\n        above.faceBottom = !tileCollides;\n    }\n\n    if (below && below.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceBottom = false;\n        }\n\n        below.faceTop = !tileCollides;\n    }\n\n    if (left && left.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceLeft = false;\n        }\n\n        left.faceRight = !tileCollides;\n    }\n\n    if (right && right.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceRight = false;\n        }\n\n        right.faceLeft = !tileCollides;\n    }\n\n    if (tile && !tile.collides)\n    {\n        tile.resetFaces();\n    }\n\n    return tile;\n};\n\nmodule.exports = CalculateFacesAt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTileAt = require('./GetTileAt');\n\n/**\n * Calculates interesting faces at the given tile coordinates of the specified layer. Interesting\n * faces are used internally for optimizing collisions against tiles. This method is mostly used\n * internally to optimize recalculating faces when only one tile has been changed.\n *\n * @function Phaser.Tilemaps.Components.CalculateFacesAt\n * @since 3.0.0\n *\n * @param {number} tileX - The x coordinate.\n * @param {number} tileY - The y coordinate.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n */\nvar CalculateFacesAt = function (tileX, tileY, layer)\n{\n    var tile = GetTileAt(tileX, tileY, true, layer);\n    var above = GetTileAt(tileX, tileY - 1, true, layer);\n    var below = GetTileAt(tileX, tileY + 1, true, layer);\n    var left = GetTileAt(tileX - 1, tileY, true, layer);\n    var right = GetTileAt(tileX + 1, tileY, true, layer);\n    var tileCollides = tile && tile.collides;\n\n    // Assume the changed tile has all interesting edges\n    if (tileCollides)\n    {\n        tile.faceTop = true;\n        tile.faceBottom = true;\n        tile.faceLeft = true;\n        tile.faceRight = true;\n    }\n\n    // Reset edges that are shared between tile and its neighbors\n    if (above && above.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceTop = false;\n        }\n\n        above.faceBottom = !tileCollides;\n    }\n\n    if (below && below.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceBottom = false;\n        }\n\n        below.faceTop = !tileCollides;\n    }\n\n    if (left && left.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceLeft = false;\n        }\n\n        left.faceRight = !tileCollides;\n    }\n\n    if (right && right.collides)\n    {\n        if (tileCollides)\n        {\n            tile.faceRight = false;\n        }\n\n        right.faceLeft = !tileCollides;\n    }\n\n    if (tile && !tile.collides)\n    {\n        tile.resetFaces();\n    }\n\n    return tile;\n};\n\nmodule.exports = CalculateFacesAt;\n"},"lineCount":89}},"error":null,"hash":"d58e18fba9f4bbe4d4d5e3488edde433","cacheData":{"env":{}}}
{"id":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./WorldToTileXY","loc":{"line":7,"column":28,"index":209},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/WorldToTileX.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/WorldToTileXY.js"},{"name":"../../math/Vector2","loc":{"line":8,"column":22,"index":251},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/WorldToTileX.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/math/Vector2.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar WorldToTileXY = require('./WorldToTileXY');\nvar Vector2 = require('../../math/Vector2');\n\nvar tempVec = new Vector2();\n\n/**\n * Converts from world X coordinates (pixels) to tile X coordinates (tile units), factoring in the\n * layer's position, scale and scroll.\n *\n * @function Phaser.Tilemaps.Components.WorldToTileX\n * @since 3.0.0\n *\n * @param {number} worldX - The x coordinate to be converted, in pixels, not tiles.\n * @param {boolean} snapToFloor - Whether or not to round the tile coordinate down to the nearest integer.\n * @param {?Phaser.Cameras.Scene2D.Camera} camera - The Camera to use when calculating the tile index from the world values.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {number} The X location in tile units.\n */\nvar WorldToTileX = function (worldX, snapToFloor, camera, layer)\n{\n    WorldToTileXY(worldX, 0, snapToFloor, tempVec, camera, layer);\n\n    return tempVec.x;\n};\n\nmodule.exports = WorldToTileX;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/WorldToTileX.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/WorldToTileX.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar WorldToTileXY = require('./WorldToTileXY');\nvar Vector2 = require('../../math/Vector2');\n\nvar tempVec = new Vector2();\n\n/**\n * Converts from world X coordinates (pixels) to tile X coordinates (tile units), factoring in the\n * layer's position, scale and scroll.\n *\n * @function Phaser.Tilemaps.Components.WorldToTileX\n * @since 3.0.0\n *\n * @param {number} worldX - The x coordinate to be converted, in pixels, not tiles.\n * @param {boolean} snapToFloor - Whether or not to round the tile coordinate down to the nearest integer.\n * @param {?Phaser.Cameras.Scene2D.Camera} camera - The Camera to use when calculating the tile index from the world values.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {number} The X location in tile units.\n */\nvar WorldToTileX = function (worldX, snapToFloor, camera, layer)\n{\n    WorldToTileXY(worldX, 0, snapToFloor, tempVec, camera, layer);\n\n    return tempVec.x;\n};\n\nmodule.exports = WorldToTileX;\n"},"lineCount":34}},"error":null,"hash":"de2afa1016f2ab6bc511fa9b3582f56b","cacheData":{"env":{}}}
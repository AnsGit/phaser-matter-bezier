{"id":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./GetTilesWithin","loc":{"line":7,"column":29,"index":210},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/GetTilesWithin.js"},{"name":"./ReplaceByIndex","loc":{"line":8,"column":29,"index":260},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/ReplaceByIndex.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\nvar ReplaceByIndex = require('./ReplaceByIndex');\n\n/**\n * Creates a Sprite for every object matching the given tile indexes in the layer. You can\n * optionally specify if each tile will be replaced with a new tile after the Sprite has been\n * created. This is useful if you want to lay down special tiles in a level that are converted to\n * Sprites, but want to replace the tile itself with a floor tile or similar once converted.\n *\n * @function Phaser.Tilemaps.Components.CreateFromTiles\n * @since 3.0.0\n *\n * @param {(number|number[])} indexes - The tile index, or array of indexes, to create Sprites from.\n * @param {?(number|number[])} replacements - The tile index, or array of indexes, to change a converted tile to. Set to `null` to leave the tiles unchanged. If an array is given, it is assumed to be a one-to-one mapping with the indexes array.\n * @param {Phaser.Types.GameObjects.Sprite.SpriteConfig} spriteConfig - The config object to pass into the Sprite creator (i.e. scene.make.sprite).\n * @param {Phaser.Scene} scene - The Scene to create the Sprites within.\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera to use when determining the world XY\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {Phaser.GameObjects.Sprite[]} An array of the Sprites that were created.\n */\nvar CreateFromTiles = function (indexes, replacements, spriteConfig, scene, camera, layer)\n{\n    if (!spriteConfig) { spriteConfig = {}; }\n\n    if (!Array.isArray(indexes))\n    {\n        indexes = [ indexes ];\n    }\n\n    var tilemapLayer = layer.tilemapLayer;\n\n    if (!scene) { scene = tilemapLayer.scene; }\n    if (!camera) { camera = scene.cameras.main; }\n\n    var tiles = GetTilesWithin(0, 0, layer.width, layer.height, null, layer);\n    var sprites = [];\n    var i;\n\n    for (i = 0; i < tiles.length; i++)\n    {\n        var tile = tiles[i];\n\n        if (indexes.indexOf(tile.index) !== -1)\n        {\n            var point = tilemapLayer.tileToWorldXY(tile.x, tile.y, undefined, camera,layer);\n\n            spriteConfig.x = point.x;\n            spriteConfig.y = point.y;\n\n            sprites.push(scene.make.sprite(spriteConfig));\n        }\n    }\n\n    if (typeof replacements === 'number')\n    {\n        //  Assume 1 replacement for all types of tile given\n        for (i = 0; i < indexes.length; i++)\n        {\n            ReplaceByIndex(indexes[i], replacements, 0, 0, layer.width, layer.height, layer);\n        }\n    }\n    else if (Array.isArray(replacements))\n    {\n        //  Assume 1 to 1 mapping with indexes array\n        for (i = 0; i < indexes.length; i++)\n        {\n            ReplaceByIndex(indexes[i], replacements[i], 0, 0, layer.width, layer.height, layer);\n        }\n    }\n\n    return sprites;\n};\n\nmodule.exports = CreateFromTiles;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/CreateFromTiles.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\nvar ReplaceByIndex = require('./ReplaceByIndex');\n\n/**\n * Creates a Sprite for every object matching the given tile indexes in the layer. You can\n * optionally specify if each tile will be replaced with a new tile after the Sprite has been\n * created. This is useful if you want to lay down special tiles in a level that are converted to\n * Sprites, but want to replace the tile itself with a floor tile or similar once converted.\n *\n * @function Phaser.Tilemaps.Components.CreateFromTiles\n * @since 3.0.0\n *\n * @param {(number|number[])} indexes - The tile index, or array of indexes, to create Sprites from.\n * @param {?(number|number[])} replacements - The tile index, or array of indexes, to change a converted tile to. Set to `null` to leave the tiles unchanged. If an array is given, it is assumed to be a one-to-one mapping with the indexes array.\n * @param {Phaser.Types.GameObjects.Sprite.SpriteConfig} spriteConfig - The config object to pass into the Sprite creator (i.e. scene.make.sprite).\n * @param {Phaser.Scene} scene - The Scene to create the Sprites within.\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera to use when determining the world XY\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {Phaser.GameObjects.Sprite[]} An array of the Sprites that were created.\n */\nvar CreateFromTiles = function (indexes, replacements, spriteConfig, scene, camera, layer)\n{\n    if (!spriteConfig) { spriteConfig = {}; }\n\n    if (!Array.isArray(indexes))\n    {\n        indexes = [ indexes ];\n    }\n\n    var tilemapLayer = layer.tilemapLayer;\n\n    if (!scene) { scene = tilemapLayer.scene; }\n    if (!camera) { camera = scene.cameras.main; }\n\n    var tiles = GetTilesWithin(0, 0, layer.width, layer.height, null, layer);\n    var sprites = [];\n    var i;\n\n    for (i = 0; i < tiles.length; i++)\n    {\n        var tile = tiles[i];\n\n        if (indexes.indexOf(tile.index) !== -1)\n        {\n            var point = tilemapLayer.tileToWorldXY(tile.x, tile.y, undefined, camera,layer);\n\n            spriteConfig.x = point.x;\n            spriteConfig.y = point.y;\n\n            sprites.push(scene.make.sprite(spriteConfig));\n        }\n    }\n\n    if (typeof replacements === 'number')\n    {\n        //  Assume 1 replacement for all types of tile given\n        for (i = 0; i < indexes.length; i++)\n        {\n            ReplaceByIndex(indexes[i], replacements, 0, 0, layer.width, layer.height, layer);\n        }\n    }\n    else if (Array.isArray(replacements))\n    {\n        //  Assume 1 to 1 mapping with indexes array\n        for (i = 0; i < indexes.length; i++)\n        {\n            ReplaceByIndex(indexes[i], replacements[i], 0, 0, layer.width, layer.height, layer);\n        }\n    }\n\n    return sprites;\n};\n\nmodule.exports = CreateFromTiles;\n"},"lineCount":82}},"error":null,"hash":"766be7220cb3f10e54fc1642b8401b7a","cacheData":{"env":{}}}
{"id":"node_modules/phaser/src/display/color/GetColor.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Given 3 separate color values this will return an integer representation of it.\n *\n * @function Phaser.Display.Color.GetColor\n * @since 3.0.0\n *\n * @param {number} red - The red color value. A number between 0 and 255.\n * @param {number} green - The green color value. A number between 0 and 255.\n * @param {number} blue - The blue color value. A number between 0 and 255.\n *\n * @return {number} The combined color value.\n */\nvar GetColor = function (red, green, blue)\n{\n    return red << 16 | green << 8 | blue;\n};\n\nmodule.exports = GetColor;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/display/color/GetColor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules/phaser/src/display/color/GetColor.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Given 3 separate color values this will return an integer representation of it.\n *\n * @function Phaser.Display.Color.GetColor\n * @since 3.0.0\n *\n * @param {number} red - The red color value. A number between 0 and 255.\n * @param {number} green - The green color value. A number between 0 and 255.\n * @param {number} blue - The blue color value. A number between 0 and 255.\n *\n * @return {number} The combined color value.\n */\nvar GetColor = function (red, green, blue)\n{\n    return red << 16 | green << 8 | blue;\n};\n\nmodule.exports = GetColor;\n"},"lineCount":25}},"error":null,"hash":"7c9ed4a290bc90fd2a7bb809db78f784","cacheData":{"env":{}}}
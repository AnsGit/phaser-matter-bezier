{"id":"node_modules/phaser/src/geom/rectangle/Intersection.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./Rectangle","loc":{"line":7,"column":24,"index":205},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/rectangle/Intersection.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/rectangle/Rectangle.js"},{"name":"../intersects/RectangleToRectangle","loc":{"line":8,"column":25,"index":246},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/rectangle/Intersection.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/intersects/RectangleToRectangle.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Rectangle = require('./Rectangle');\nvar Intersects = require('../intersects/RectangleToRectangle');\n\n/**\n * Takes two Rectangles and first checks to see if they intersect.\n * If they intersect it will return the area of intersection in the `out` Rectangle.\n * If they do not intersect, the `out` Rectangle will have a width and height of zero.\n *\n * @function Phaser.Geom.Rectangle.Intersection\n * @since 3.11.0\n *\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\n *\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to get the intersection from.\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to get the intersection from.\n * @param {Phaser.Geom.Rectangle} [out] - A Rectangle to store the intersection results in.\n *\n * @return {Phaser.Geom.Rectangle} The intersection result. If the width and height are zero, no intersection occurred.\n */\nvar Intersection = function (rectA, rectB, out)\n{\n    if (out === undefined) { out = new Rectangle(); }\n\n    if (Intersects(rectA, rectB))\n    {\n        out.x = Math.max(rectA.x, rectB.x);\n        out.y = Math.max(rectA.y, rectB.y);\n        out.width = Math.min(rectA.right, rectB.right) - out.x;\n        out.height = Math.min(rectA.bottom, rectB.bottom) - out.y;\n    }\n    else\n    {\n        out.setEmpty();\n    }\n\n    return out;\n};\n\nmodule.exports = Intersection;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/rectangle/Intersection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/phaser/src/geom/rectangle/Intersection.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Rectangle = require('./Rectangle');\nvar Intersects = require('../intersects/RectangleToRectangle');\n\n/**\n * Takes two Rectangles and first checks to see if they intersect.\n * If they intersect it will return the area of intersection in the `out` Rectangle.\n * If they do not intersect, the `out` Rectangle will have a width and height of zero.\n *\n * @function Phaser.Geom.Rectangle.Intersection\n * @since 3.11.0\n *\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\n *\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to get the intersection from.\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to get the intersection from.\n * @param {Phaser.Geom.Rectangle} [out] - A Rectangle to store the intersection results in.\n *\n * @return {Phaser.Geom.Rectangle} The intersection result. If the width and height are zero, no intersection occurred.\n */\nvar Intersection = function (rectA, rectB, out)\n{\n    if (out === undefined) { out = new Rectangle(); }\n\n    if (Intersects(rectA, rectB))\n    {\n        out.x = Math.max(rectA.x, rectB.x);\n        out.y = Math.max(rectA.y, rectB.y);\n        out.width = Math.min(rectA.right, rectB.right) - out.x;\n        out.height = Math.min(rectA.bottom, rectB.bottom) - out.y;\n    }\n    else\n    {\n        out.setEmpty();\n    }\n\n    return out;\n};\n\nmodule.exports = Intersection;\n"},"lineCount":46}},"error":null,"hash":"ce21c57941a69c75b0d66c0f8c476c81","cacheData":{"env":{}}}
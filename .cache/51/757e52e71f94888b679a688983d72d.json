{"id":"node_modules/phaser/src/tilemaps/components/FindTile.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./GetTilesWithin","loc":{"line":7,"column":29,"index":210},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/FindTile.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/GetTilesWithin.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\n\n/**\n * @callback FindTileCallback\n *\n * @param {Phaser.Tilemaps.Tile} value - The Tile.\n * @param {number} index - The index of the tile.\n * @param {Phaser.Tilemaps.Tile[]} array - An array of Tile objects.\n *\n * @return {boolean} Return `true` if the callback should run, otherwise `false`.\n */\n\n/**\n * Find the first tile in the given rectangular area (in tile coordinates) of the layer that\n * satisfies the provided testing function. I.e. finds the first tile for which `callback` returns\n * true. Similar to Array.prototype.find in vanilla JS.\n *\n * @function Phaser.Tilemaps.Components.FindTile\n * @since 3.0.0\n *\n * @param {FindTileCallback} callback - The callback. Each tile in the given area will be passed to this callback as the first and only parameter.\n * @param {object} context - The context under which the callback should be run.\n * @param {number} tileX - The left most tile index (in tile coordinates) to use as the origin of the area to filter.\n * @param {number} tileY - The top most tile index (in tile coordinates) to use as the origin of the area to filter.\n * @param {number} width - How many tiles wide from the `tileX` index the area will be.\n * @param {number} height - How many tiles tall from the `tileY` index the area will be.\n * @param {Phaser.Types.Tilemaps.FilteringOptions} filteringOptions - Optional filters to apply when getting the tiles.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {?Phaser.Tilemaps.Tile} A Tile that matches the search, or null if no Tile found\n */\nvar FindTile = function (callback, context, tileX, tileY, width, height, filteringOptions, layer)\n{\n    var tiles = GetTilesWithin(tileX, tileY, width, height, filteringOptions, layer);\n\n    return tiles.find(callback, context) || null;\n};\n\nmodule.exports = FindTile;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/FindTile.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/FindTile.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\n\n/**\n * @callback FindTileCallback\n *\n * @param {Phaser.Tilemaps.Tile} value - The Tile.\n * @param {number} index - The index of the tile.\n * @param {Phaser.Tilemaps.Tile[]} array - An array of Tile objects.\n *\n * @return {boolean} Return `true` if the callback should run, otherwise `false`.\n */\n\n/**\n * Find the first tile in the given rectangular area (in tile coordinates) of the layer that\n * satisfies the provided testing function. I.e. finds the first tile for which `callback` returns\n * true. Similar to Array.prototype.find in vanilla JS.\n *\n * @function Phaser.Tilemaps.Components.FindTile\n * @since 3.0.0\n *\n * @param {FindTileCallback} callback - The callback. Each tile in the given area will be passed to this callback as the first and only parameter.\n * @param {object} context - The context under which the callback should be run.\n * @param {number} tileX - The left most tile index (in tile coordinates) to use as the origin of the area to filter.\n * @param {number} tileY - The top most tile index (in tile coordinates) to use as the origin of the area to filter.\n * @param {number} width - How many tiles wide from the `tileX` index the area will be.\n * @param {number} height - How many tiles tall from the `tileY` index the area will be.\n * @param {Phaser.Types.Tilemaps.FilteringOptions} filteringOptions - Optional filters to apply when getting the tiles.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {?Phaser.Tilemaps.Tile} A Tile that matches the search, or null if no Tile found\n */\nvar FindTile = function (callback, context, tileX, tileY, width, height, filteringOptions, layer)\n{\n    var tiles = GetTilesWithin(tileX, tileY, width, height, filteringOptions, layer);\n\n    return tiles.find(callback, context) || null;\n};\n\nmodule.exports = FindTile;\n"},"lineCount":46}},"error":null,"hash":"ce86a9e129e0d99f2cdce06cf007f2a6","cacheData":{"env":{}}}
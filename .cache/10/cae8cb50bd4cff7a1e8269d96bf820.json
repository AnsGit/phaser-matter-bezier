{"id":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Converts from tile X coordinates (tile units) to world X coordinates (pixels), factoring in the\n * layer's position, scale and scroll.\n *\n * @function Phaser.Tilemaps.Components.TileToWorldX\n * @since 3.0.0\n *\n * @param {number} tileX - The x coordinate, in tiles, not pixels.\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera to use when calculating the tile index from the world values.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {number}\n */\nvar TileToWorldX = function (tileX, camera, layer)\n{\n    var tileWidth = layer.baseTileWidth;\n    var tilemapLayer = layer.tilemapLayer;\n    var layerWorldX = 0;\n\n    if (tilemapLayer)\n    {\n        if (!camera) { camera = tilemapLayer.scene.cameras.main; }\n\n        layerWorldX = tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX);\n\n        tileWidth *= tilemapLayer.scaleX;\n    }\n\n    return layerWorldX + tileX * tileWidth;\n};\n\nmodule.exports = TileToWorldX;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/TileToWorldX.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/TileToWorldX.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Converts from tile X coordinates (tile units) to world X coordinates (pixels), factoring in the\n * layer's position, scale and scroll.\n *\n * @function Phaser.Tilemaps.Components.TileToWorldX\n * @since 3.0.0\n *\n * @param {number} tileX - The x coordinate, in tiles, not pixels.\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera to use when calculating the tile index from the world values.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {number}\n */\nvar TileToWorldX = function (tileX, camera, layer)\n{\n    var tileWidth = layer.baseTileWidth;\n    var tilemapLayer = layer.tilemapLayer;\n    var layerWorldX = 0;\n\n    if (tilemapLayer)\n    {\n        if (!camera) { camera = tilemapLayer.scene.cameras.main; }\n\n        layerWorldX = tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX);\n\n        tileWidth *= tilemapLayer.scaleX;\n    }\n\n    return layerWorldX + tileX * tileWidth;\n};\n\nmodule.exports = TileToWorldX;\n"},"lineCount":39}},"error":null,"hash":"f76b5041fc355fe87050af5d42b79cfb","cacheData":{"env":{}}}
{"id":"node_modules/phaser/src/geom/point/Interpolate.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./Point","loc":{"line":7,"column":20,"index":201},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/point/Interpolate.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/point/Point.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Point = require('./Point');\n\n/**\n * Returns the linear interpolation point between the two given points, based on `t`.\n *\n * @function Phaser.Geom.Point.Interpolate\n * @since 3.0.0\n *\n * @generic {Phaser.Geom.Point} O - [out,$return]\n *\n * @param {Phaser.Geom.Point} pointA - The starting `Point` for the interpolation.\n * @param {Phaser.Geom.Point} pointB - The target `Point` for the interpolation.\n * @param {number} [t=0] - The amount to interpolate between the two points. Generally, a value between 0 (returns the starting `Point`) and 1 (returns the target `Point`). If omitted, 0 is used.\n * @param {(Phaser.Geom.Point|object)} [out] - An optional `Point` object whose `x` and `y` values will be set to the result of the interpolation (can also be any object with `x` and `y` properties). If omitted, a new `Point` created and returned.\n *\n * @return {(Phaser.Geom.Point|object)} Either the object from the `out` argument with the properties `x` and `y` set to the result of the interpolation or a newly created `Point` object.\n */\nvar Interpolate = function (pointA, pointB, t, out)\n{\n    if (t === undefined) { t = 0; }\n    if (out === undefined) { out = new Point(); }\n\n    out.x = pointA.x + ((pointB.x - pointA.x) * t);\n    out.y = pointA.y + ((pointB.y - pointA.y) * t);\n\n    return out;\n};\n\nmodule.exports = Interpolate;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/point/Interpolate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/phaser/src/geom/point/Interpolate.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Point = require('./Point');\n\n/**\n * Returns the linear interpolation point between the two given points, based on `t`.\n *\n * @function Phaser.Geom.Point.Interpolate\n * @since 3.0.0\n *\n * @generic {Phaser.Geom.Point} O - [out,$return]\n *\n * @param {Phaser.Geom.Point} pointA - The starting `Point` for the interpolation.\n * @param {Phaser.Geom.Point} pointB - The target `Point` for the interpolation.\n * @param {number} [t=0] - The amount to interpolate between the two points. Generally, a value between 0 (returns the starting `Point`) and 1 (returns the target `Point`). If omitted, 0 is used.\n * @param {(Phaser.Geom.Point|object)} [out] - An optional `Point` object whose `x` and `y` values will be set to the result of the interpolation (can also be any object with `x` and `y` properties). If omitted, a new `Point` created and returned.\n *\n * @return {(Phaser.Geom.Point|object)} Either the object from the `out` argument with the properties `x` and `y` set to the result of the interpolation or a newly created `Point` object.\n */\nvar Interpolate = function (pointA, pointB, t, out)\n{\n    if (t === undefined) { t = 0; }\n    if (out === undefined) { out = new Point(); }\n\n    out.x = pointA.x + ((pointB.x - pointA.x) * t);\n    out.y = pointA.y + ((pointB.y - pointA.y) * t);\n\n    return out;\n};\n\nmodule.exports = Interpolate;\n"},"lineCount":36}},"error":null,"hash":"654b49b9a5207313bd2c5d2cf2b5d432","cacheData":{"env":{}}}
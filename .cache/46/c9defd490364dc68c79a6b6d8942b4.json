{"id":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"../polygon/Earcut","loc":{"line":7,"column":21,"index":202},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/polygon/Earcut.js"},{"name":"./Triangle","loc":{"line":8,"column":23,"index":247},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/triangle/Triangle.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar EarCut = require('../polygon/Earcut');\nvar Triangle = require('./Triangle');\n\n/**\n * Takes an array of vertex coordinates, and optionally an array of hole indices, then returns an array\n * of Triangle instances, where the given vertices have been decomposed into a series of triangles.\n *\n * @function Phaser.Geom.Triangle.BuildFromPolygon\n * @since 3.0.0\n *\n * @generic {Phaser.Geom.Triangle[]} O - [out,$return]\n *\n * @param {array} data - A flat array of vertex coordinates like [x0,y0, x1,y1, x2,y2, ...]\n * @param {array} [holes=null] - An array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5–7 and another with 8–11).\n * @param {number} [scaleX=1] - Horizontal scale factor to multiply the resulting points by.\n * @param {number} [scaleY=1] - Vertical scale factor to multiply the resulting points by.\n * @param {(array|Phaser.Geom.Triangle[])} [out] - An array to store the resulting Triangle instances in. If not provided, a new array is created.\n *\n * @return {(array|Phaser.Geom.Triangle[])} An array of Triangle instances, where each triangle is based on the decomposed vertices data.\n */\nvar BuildFromPolygon = function (data, holes, scaleX, scaleY, out)\n{\n    if (holes === undefined) { holes = null; }\n    if (scaleX === undefined) { scaleX = 1; }\n    if (scaleY === undefined) { scaleY = 1; }\n    if (out === undefined) { out = []; }\n\n    var tris = EarCut(data, holes);\n\n    var a;\n    var b;\n    var c;\n\n    var x1;\n    var y1;\n\n    var x2;\n    var y2;\n\n    var x3;\n    var y3;\n\n    for (var i = 0; i < tris.length; i += 3)\n    {\n        a = tris[i];\n        b = tris[i + 1];\n        c = tris[i + 2];\n\n        x1 = data[a * 2] * scaleX;\n        y1 = data[(a * 2) + 1] * scaleY;\n\n        x2 = data[b * 2] * scaleX;\n        y2 = data[(b * 2) + 1] * scaleY;\n\n        x3 = data[c * 2] * scaleX;\n        y3 = data[(c * 2) + 1] * scaleY;\n\n        out.push(new Triangle(x1, y1, x2, y2, x3, y3));\n    }\n\n    return out;\n};\n\nmodule.exports = BuildFromPolygon;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/phaser/src/geom/triangle/BuildFromPolygon.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar EarCut = require('../polygon/Earcut');\nvar Triangle = require('./Triangle');\n\n/**\n * Takes an array of vertex coordinates, and optionally an array of hole indices, then returns an array\n * of Triangle instances, where the given vertices have been decomposed into a series of triangles.\n *\n * @function Phaser.Geom.Triangle.BuildFromPolygon\n * @since 3.0.0\n *\n * @generic {Phaser.Geom.Triangle[]} O - [out,$return]\n *\n * @param {array} data - A flat array of vertex coordinates like [x0,y0, x1,y1, x2,y2, ...]\n * @param {array} [holes=null] - An array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5–7 and another with 8–11).\n * @param {number} [scaleX=1] - Horizontal scale factor to multiply the resulting points by.\n * @param {number} [scaleY=1] - Vertical scale factor to multiply the resulting points by.\n * @param {(array|Phaser.Geom.Triangle[])} [out] - An array to store the resulting Triangle instances in. If not provided, a new array is created.\n *\n * @return {(array|Phaser.Geom.Triangle[])} An array of Triangle instances, where each triangle is based on the decomposed vertices data.\n */\nvar BuildFromPolygon = function (data, holes, scaleX, scaleY, out)\n{\n    if (holes === undefined) { holes = null; }\n    if (scaleX === undefined) { scaleX = 1; }\n    if (scaleY === undefined) { scaleY = 1; }\n    if (out === undefined) { out = []; }\n\n    var tris = EarCut(data, holes);\n\n    var a;\n    var b;\n    var c;\n\n    var x1;\n    var y1;\n\n    var x2;\n    var y2;\n\n    var x3;\n    var y3;\n\n    for (var i = 0; i < tris.length; i += 3)\n    {\n        a = tris[i];\n        b = tris[i + 1];\n        c = tris[i + 2];\n\n        x1 = data[a * 2] * scaleX;\n        y1 = data[(a * 2) + 1] * scaleY;\n\n        x2 = data[b * 2] * scaleX;\n        y2 = data[(b * 2) + 1] * scaleY;\n\n        x3 = data[c * 2] * scaleX;\n        y3 = data[(c * 2) + 1] * scaleY;\n\n        out.push(new Triangle(x1, y1, x2, y2, x3, y3));\n    }\n\n    return out;\n};\n\nmodule.exports = BuildFromPolygon;\n"},"lineCount":71}},"error":null,"hash":"c0f4aa6fb3e4003a968aadcf60cca79a","cacheData":{"env":{}}}
{"id":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * The Scene Systems Pre Update Event.\n *\n * This event is dispatched by a Scene during the main game loop step.\n *\n * The event flow for a single step of a Scene is as follows:\n *\n * 1. [PRE_UPDATE]{@linkcode Phaser.Scenes.Events#event:PRE_UPDATE}\n * 2. [UPDATE]{@linkcode Phaser.Scenes.Events#event:UPDATE}\n * 3. The `Scene.update` method is called, if it exists\n * 4. [POST_UPDATE]{@linkcode Phaser.Scenes.Events#event:POST_UPDATE}\n * 5. [PRE_RENDER]{@linkcode Phaser.Scenes.Events#event:PRE_RENDER}\n * 6. [RENDER]{@linkcode Phaser.Scenes.Events#event:RENDER}\n *\n * Listen to it from a Scene using `this.events.on('preupdate', listener)`.\n *\n * A Scene will only run its step if it is active.\n *\n * @event Phaser.Scenes.Events#PRE_UPDATE\n * @type {string}\n * @since 3.0.0\n *\n * @param {Phaser.Scenes.Systems} sys - A reference to the Scene Systems class of the Scene that emitted this event.\n * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\n * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\n */\nmodule.exports = 'preupdate';\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/phaser/src/scene/events/PRE_UPDATE_EVENT.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * The Scene Systems Pre Update Event.\n *\n * This event is dispatched by a Scene during the main game loop step.\n *\n * The event flow for a single step of a Scene is as follows:\n *\n * 1. [PRE_UPDATE]{@linkcode Phaser.Scenes.Events#event:PRE_UPDATE}\n * 2. [UPDATE]{@linkcode Phaser.Scenes.Events#event:UPDATE}\n * 3. The `Scene.update` method is called, if it exists\n * 4. [POST_UPDATE]{@linkcode Phaser.Scenes.Events#event:POST_UPDATE}\n * 5. [PRE_RENDER]{@linkcode Phaser.Scenes.Events#event:PRE_RENDER}\n * 6. [RENDER]{@linkcode Phaser.Scenes.Events#event:RENDER}\n *\n * Listen to it from a Scene using `this.events.on('preupdate', listener)`.\n *\n * A Scene will only run its step if it is active.\n *\n * @event Phaser.Scenes.Events#PRE_UPDATE\n * @type {string}\n * @since 3.0.0\n *\n * @param {Phaser.Scenes.Systems} sys - A reference to the Scene Systems class of the Scene that emitted this event.\n * @param {number} time - The current time. Either a High Resolution Timer value if it comes from Request Animation Frame, or Date.now if using SetTimeout.\n * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\n */\nmodule.exports = 'preupdate';\n"},"lineCount":34}},"error":null,"hash":"c1678a543534704a5208f9a33aac2b40","cacheData":{"env":{}}}
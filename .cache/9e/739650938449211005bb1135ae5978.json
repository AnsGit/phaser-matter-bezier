{"id":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"../Tile","loc":{"line":7,"column":19,"index":200},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/PutTileAt.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/Tile.js"},{"name":"./IsInLayerBounds","loc":{"line":8,"column":30,"index":242},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/PutTileAt.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/IsInLayerBounds.js"},{"name":"./CalculateFacesAt","loc":{"line":9,"column":31,"index":295},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/PutTileAt.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/CalculateFacesAt.js"},{"name":"./SetTileCollision","loc":{"line":10,"column":31,"index":349},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/PutTileAt.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/tilemaps/components/SetTileCollision.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Tile = require('../Tile');\nvar IsInLayerBounds = require('./IsInLayerBounds');\nvar CalculateFacesAt = require('./CalculateFacesAt');\nvar SetTileCollision = require('./SetTileCollision');\n\n/**\n * Puts a tile at the given tile coordinates in the specified layer. You can pass in either an index\n * or a Tile object. If you pass in a Tile, all attributes will be copied over to the specified\n * location. If you pass in an index, only the index at the specified location will be changed.\n * Collision information will be recalculated at the specified location.\n *\n * @function Phaser.Tilemaps.Components.PutTileAt\n * @since 3.0.0\n *\n * @param {(number|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\n * @param {number} tileX - The x coordinate, in tiles, not pixels.\n * @param {number} tileY - The y coordinate, in tiles, not pixels.\n * @param {boolean} recalculateFaces - `true` if the faces data should be recalculated.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {Phaser.Tilemaps.Tile} The Tile object that was created or added to this map.\n */\nvar PutTileAt = function (tile, tileX, tileY, recalculateFaces, layer)\n{\n    if (recalculateFaces === undefined) { recalculateFaces = true; }\n\n    if (!IsInLayerBounds(tileX, tileY, layer))\n    {\n        return null;\n    }\n\n    var index;\n    var oldTile = layer.data[tileY][tileX];\n    var oldTileCollides = oldTile && oldTile.collides;\n\n    if (tile instanceof Tile)\n    {\n        if (layer.data[tileY][tileX] === null)\n        {\n            layer.data[tileY][tileX] = new Tile(layer, tile.index, tileX, tileY, layer.tileWidth, layer.tileHeight);\n        }\n\n        layer.data[tileY][tileX].copy(tile);\n    }\n    else\n    {\n        index = tile;\n\n        if (layer.data[tileY][tileX] === null)\n        {\n            layer.data[tileY][tileX] = new Tile(layer, index, tileX, tileY, layer.tileWidth, layer.tileHeight);\n        }\n        else\n        {\n            layer.data[tileY][tileX].index = index;\n        }\n    }\n\n    // Updating colliding flag on the new tile\n    var newTile = layer.data[tileY][tileX];\n    var collides = layer.collideIndexes.indexOf(newTile.index) !== -1;\n\n    index = tile instanceof Tile ? tile.index : tile;\n\n    if (index === -1)\n    {\n        newTile.width = layer.tileWidth;\n        newTile.height = layer.tileHeight;\n    }\n    else\n    {\n        var tiles = layer.tilemapLayer.tilemap.tiles;\n        var sid = tiles[index][2];\n        var set = layer.tilemapLayer.tileset[sid];\n\n        newTile.width = set.tileWidth;\n        newTile.height = set.tileHeight;\n    }\n\n    SetTileCollision(newTile, collides);\n\n    // Recalculate faces only if the colliding flag at (tileX, tileY) has changed\n    if (recalculateFaces && (oldTileCollides !== newTile.collides))\n    {\n        CalculateFacesAt(tileX, tileY, layer);\n    }\n\n    return newTile;\n};\n\nmodule.exports = PutTileAt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/PutTileAt.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/PutTileAt.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Tile = require('../Tile');\nvar IsInLayerBounds = require('./IsInLayerBounds');\nvar CalculateFacesAt = require('./CalculateFacesAt');\nvar SetTileCollision = require('./SetTileCollision');\n\n/**\n * Puts a tile at the given tile coordinates in the specified layer. You can pass in either an index\n * or a Tile object. If you pass in a Tile, all attributes will be copied over to the specified\n * location. If you pass in an index, only the index at the specified location will be changed.\n * Collision information will be recalculated at the specified location.\n *\n * @function Phaser.Tilemaps.Components.PutTileAt\n * @since 3.0.0\n *\n * @param {(number|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\n * @param {number} tileX - The x coordinate, in tiles, not pixels.\n * @param {number} tileY - The y coordinate, in tiles, not pixels.\n * @param {boolean} recalculateFaces - `true` if the faces data should be recalculated.\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\n *\n * @return {Phaser.Tilemaps.Tile} The Tile object that was created or added to this map.\n */\nvar PutTileAt = function (tile, tileX, tileY, recalculateFaces, layer)\n{\n    if (recalculateFaces === undefined) { recalculateFaces = true; }\n\n    if (!IsInLayerBounds(tileX, tileY, layer))\n    {\n        return null;\n    }\n\n    var index;\n    var oldTile = layer.data[tileY][tileX];\n    var oldTileCollides = oldTile && oldTile.collides;\n\n    if (tile instanceof Tile)\n    {\n        if (layer.data[tileY][tileX] === null)\n        {\n            layer.data[tileY][tileX] = new Tile(layer, tile.index, tileX, tileY, layer.tileWidth, layer.tileHeight);\n        }\n\n        layer.data[tileY][tileX].copy(tile);\n    }\n    else\n    {\n        index = tile;\n\n        if (layer.data[tileY][tileX] === null)\n        {\n            layer.data[tileY][tileX] = new Tile(layer, index, tileX, tileY, layer.tileWidth, layer.tileHeight);\n        }\n        else\n        {\n            layer.data[tileY][tileX].index = index;\n        }\n    }\n\n    // Updating colliding flag on the new tile\n    var newTile = layer.data[tileY][tileX];\n    var collides = layer.collideIndexes.indexOf(newTile.index) !== -1;\n\n    index = tile instanceof Tile ? tile.index : tile;\n\n    if (index === -1)\n    {\n        newTile.width = layer.tileWidth;\n        newTile.height = layer.tileHeight;\n    }\n    else\n    {\n        var tiles = layer.tilemapLayer.tilemap.tiles;\n        var sid = tiles[index][2];\n        var set = layer.tilemapLayer.tileset[sid];\n\n        newTile.width = set.tileWidth;\n        newTile.height = set.tileHeight;\n    }\n\n    SetTileCollision(newTile, collides);\n\n    // Recalculate faces only if the colliding flag at (tileX, tileY) has changed\n    if (recalculateFaces && (oldTileCollides !== newTile.collides))\n    {\n        CalculateFacesAt(tileX, tileY, layer);\n    }\n\n    return newTile;\n};\n\nmodule.exports = PutTileAt;\n"},"lineCount":98}},"error":null,"hash":"21ed45f243b3aebdd3bf9187737f8e32","cacheData":{"env":{}}}
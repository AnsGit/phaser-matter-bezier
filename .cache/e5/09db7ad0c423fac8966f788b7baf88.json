{"id":"node_modules/phaser/src/geom/triangle/ContainsArray.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n//  http://www.blackpawn.com/texts/pointinpoly/\n\n//  points is an array of Point-like objects with public x/y properties\n//  returns an array containing all points that are within the triangle, or an empty array if none\n//  if 'returnFirst' is true it will return after the first point within the triangle is found\n\n/**\n * Filters an array of point-like objects to only those contained within a triangle.\n * If `returnFirst` is true, will return an array containing only the first point in the provided array that is within the triangle (or an empty array if there are no such points).\n *\n * @function Phaser.Geom.Triangle.ContainsArray\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Triangle} triangle - The triangle that the points are being checked in.\n * @param {Phaser.Geom.Point[]} points - An array of point-like objects (objects that have an `x` and `y` property)\n * @param {boolean} [returnFirst=false] - If `true`, return an array containing only the first point found that is within the triangle.\n * @param {array} [out] - If provided, the points that are within the triangle will be appended to this array instead of being added to a new array. If `returnFirst` is true, only the first point found within the triangle will be appended. This array will also be returned by this function.\n *\n * @return {Phaser.Geom.Point[]} An array containing all the points from `points` that are within the triangle, if an array was provided as `out`, points will be appended to that array and it will also be returned here.\n */\nvar ContainsArray = function (triangle, points, returnFirst, out)\n{\n    if (returnFirst === undefined) { returnFirst = false; }\n    if (out === undefined) { out = []; }\n\n    var v0x = triangle.x3 - triangle.x1;\n    var v0y = triangle.y3 - triangle.y1;\n\n    var v1x = triangle.x2 - triangle.x1;\n    var v1y = triangle.y2 - triangle.y1;\n\n    var dot00 = (v0x * v0x) + (v0y * v0y);\n    var dot01 = (v0x * v1x) + (v0y * v1y);\n    var dot11 = (v1x * v1x) + (v1y * v1y);\n\n    // Compute barycentric coordinates\n    var b = ((dot00 * dot11) - (dot01 * dot01));\n    var inv = (b === 0) ? 0 : (1 / b);\n\n    var u;\n    var v;\n    var v2x;\n    var v2y;\n    var dot02;\n    var dot12;\n\n    var x1 = triangle.x1;\n    var y1 = triangle.y1;\n\n    for (var i = 0; i < points.length; i++)\n    {\n        v2x = points[i].x - x1;\n        v2y = points[i].y - y1;\n\n        dot02 = (v0x * v2x) + (v0y * v2y);\n        dot12 = (v1x * v2x) + (v1y * v2y);\n\n        u = ((dot11 * dot02) - (dot01 * dot12)) * inv;\n        v = ((dot00 * dot12) - (dot01 * dot02)) * inv;\n\n        if (u >= 0 && v >= 0 && (u + v < 1))\n        {\n            out.push({ x: points[i].x, y: points[i].y });\n\n            if (returnFirst)\n            {\n                break;\n            }\n        }\n    }\n\n    return out;\n};\n\nmodule.exports = ContainsArray;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/geom/triangle/ContainsArray.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}}],"sources":{"node_modules/phaser/src/geom/triangle/ContainsArray.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n//  http://www.blackpawn.com/texts/pointinpoly/\n\n//  points is an array of Point-like objects with public x/y properties\n//  returns an array containing all points that are within the triangle, or an empty array if none\n//  if 'returnFirst' is true it will return after the first point within the triangle is found\n\n/**\n * Filters an array of point-like objects to only those contained within a triangle.\n * If `returnFirst` is true, will return an array containing only the first point in the provided array that is within the triangle (or an empty array if there are no such points).\n *\n * @function Phaser.Geom.Triangle.ContainsArray\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Triangle} triangle - The triangle that the points are being checked in.\n * @param {Phaser.Geom.Point[]} points - An array of point-like objects (objects that have an `x` and `y` property)\n * @param {boolean} [returnFirst=false] - If `true`, return an array containing only the first point found that is within the triangle.\n * @param {array} [out] - If provided, the points that are within the triangle will be appended to this array instead of being added to a new array. If `returnFirst` is true, only the first point found within the triangle will be appended. This array will also be returned by this function.\n *\n * @return {Phaser.Geom.Point[]} An array containing all the points from `points` that are within the triangle, if an array was provided as `out`, points will be appended to that array and it will also be returned here.\n */\nvar ContainsArray = function (triangle, points, returnFirst, out)\n{\n    if (returnFirst === undefined) { returnFirst = false; }\n    if (out === undefined) { out = []; }\n\n    var v0x = triangle.x3 - triangle.x1;\n    var v0y = triangle.y3 - triangle.y1;\n\n    var v1x = triangle.x2 - triangle.x1;\n    var v1y = triangle.y2 - triangle.y1;\n\n    var dot00 = (v0x * v0x) + (v0y * v0y);\n    var dot01 = (v0x * v1x) + (v0y * v1y);\n    var dot11 = (v1x * v1x) + (v1y * v1y);\n\n    // Compute barycentric coordinates\n    var b = ((dot00 * dot11) - (dot01 * dot01));\n    var inv = (b === 0) ? 0 : (1 / b);\n\n    var u;\n    var v;\n    var v2x;\n    var v2y;\n    var dot02;\n    var dot12;\n\n    var x1 = triangle.x1;\n    var y1 = triangle.y1;\n\n    for (var i = 0; i < points.length; i++)\n    {\n        v2x = points[i].x - x1;\n        v2y = points[i].y - y1;\n\n        dot02 = (v0x * v2x) + (v0y * v2y);\n        dot12 = (v1x * v2x) + (v1y * v2y);\n\n        u = ((dot11 * dot02) - (dot01 * dot12)) * inv;\n        v = ((dot00 * dot12) - (dot01 * dot02)) * inv;\n\n        if (u >= 0 && v >= 0 && (u + v < 1))\n        {\n            out.push({ x: points[i].x, y: points[i].y });\n\n            if (returnFirst)\n            {\n                break;\n            }\n        }\n    }\n\n    return out;\n};\n\nmodule.exports = ContainsArray;\n"},"lineCount":82}},"error":null,"hash":"d50173065eb9f8d750eedb37d043e89d","cacheData":{"env":{}}}
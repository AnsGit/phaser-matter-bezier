{"id":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","dependencies":[{"name":"/home/ansi/work/my/phaser-matter-bezier/package.json","includedInParent":true,"mtime":1683185740025},{"name":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/package.json","includedInParent":true,"mtime":1683181678315},{"name":"./Face","loc":{"line":7,"column":19,"index":200},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/mesh/GenerateVerts.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/mesh/Face.js"},{"name":"./Vertex","loc":{"line":8,"column":21,"index":232},"parent":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/mesh/GenerateVerts.js","resolved":"/home/ansi/work/my/phaser-matter-bezier/node_modules/phaser/src/geom/mesh/Vertex.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Face = require('./Face');\nvar Vertex = require('./Vertex');\n\n/**\n * Generates a set of Face and Vertex objects by parsing the given data.\n *\n * This method will take vertex data in one of two formats, based on the `containsZ` parameter.\n *\n * If your vertex data are `x`, `y` pairs, then `containsZ` should be `false` (this is the default)\n *\n * If your vertex data is groups of `x`, `y` and `z` values, then the `containsZ` parameter must be true.\n *\n * The `uvs` parameter is a numeric array consisting of `u` and `v` pairs.\n *\n * The `normals` parameter is a numeric array consisting of `x`, `y` vertex normal values and, if `containsZ` is true, `z` values as well.\n *\n * The `indicies` parameter is an optional array that, if given, is an indexed list of vertices to be added.\n *\n * The `colors` parameter is an optional array, or single value, that if given sets the color of each vertex created.\n *\n * The `alphas` parameter is an optional array, or single value, that if given sets the alpha of each vertex created.\n *\n * When providing indexed data it is assumed that _all_ of the arrays are indexed, not just the vertices.\n *\n * The following example will create a 256 x 256 sized quad using an index array:\n *\n * ```javascript\n * const vertices = [\n *   -128, 128,\n *   128, 128,\n *   -128, -128,\n *   128, -128\n * ];\n *\n * const uvs = [\n *   0, 1,\n *   1, 1,\n *   0, 0,\n *   1, 0\n * ];\n *\n * const indices = [ 0, 2, 1, 2, 3, 1 ];\n *\n * GenerateVerts(vertices, uvs, indicies);\n * ```\n *\n * If the data is not indexed, it's assumed that the arrays all contain sequential data.\n *\n * @function Phaser.Geom.Mesh.GenerateVerts\n * @since 3.50.0\n *\n * @param {number[]} vertices - The vertices array. Either `xy` pairs, or `xyz` if the `containsZ` parameter is `true`.\n * @param {number[]} uvs - The UVs pairs array.\n * @param {number[]} [indicies] - Optional vertex indicies array. If you don't have one, pass `null` or an empty array.\n * @param {boolean} [containsZ=false] - Does the vertices data include a `z` component?\n * @param {number[]} [normals] - Optional vertex normals array. If you don't have one, pass `null` or an empty array.\n * @param {number|number[]} [colors=0xffffff] - An array of colors, one per vertex, or a single color value applied to all vertices.\n * @param {number|number[]} [alphas=1] - An array of alpha values, one per vertex, or a single alpha value applied to all vertices.\n * @param {boolean} [flipUV=false] - Flip the UV coordinates?\n *\n * @return {Phaser.Types.Geom.Mesh.GenerateVertsResult} The parsed Face and Vertex objects.\n */\nvar GenerateVerts = function (vertices, uvs, indicies, containsZ, normals, colors, alphas, flipUV)\n{\n    if (containsZ === undefined) { containsZ = false; }\n    if (colors === undefined) { colors = 0xffffff; }\n    if (alphas === undefined) { alphas = 1; }\n    if (flipUV === undefined) { flipUV = false; }\n\n    if (vertices.length !== uvs.length && !containsZ)\n    {\n        console.warn('GenerateVerts: vertices and uvs count not equal');\n        return;\n    }\n\n    var result = {\n        faces: [],\n        vertices: []\n    };\n\n    var i;\n\n    var x;\n    var y;\n    var z;\n\n    var u;\n    var v;\n\n    var color;\n    var alpha;\n\n    var normalX;\n    var normalY;\n    var normalZ;\n\n    var iInc = (containsZ) ? 3 : 2;\n\n    var isColorArray = Array.isArray(colors);\n    var isAlphaArray = Array.isArray(alphas);\n\n    if (Array.isArray(indicies) && indicies.length > 0)\n    {\n        for (i = 0; i < indicies.length; i++)\n        {\n            var index1 = indicies[i];\n            var index2 = indicies[i] * 2;\n            var index3 = indicies[i] * iInc;\n\n            x = vertices[index3];\n            y = vertices[index3 + 1];\n            z = (containsZ) ? vertices[index3 + 2] : 0;\n\n            u = uvs[index2];\n            v = uvs[index2 + 1];\n\n            if (flipUV)\n            {\n                v = 1 - v;\n            }\n\n            color = (isColorArray) ? colors[index1] : colors;\n            alpha = (isAlphaArray) ? alphas[index1] : alphas;\n\n            normalX = 0;\n            normalY = 0;\n            normalZ = 0;\n\n            if (normals)\n            {\n                normalX = normals[index3];\n                normalY = normals[index3 + 1];\n                normalZ = (containsZ) ? normals[index3 + 2] : 0;\n            }\n\n            result.vertices.push(new Vertex(x, y, z, u, v, color, alpha, normalX, normalY, normalZ));\n        }\n    }\n    else\n    {\n        var uvIndex = 0;\n        var colorIndex = 0;\n\n        for (i = 0; i < vertices.length; i += iInc)\n        {\n            x = vertices[i];\n            y = vertices[i + 1];\n            z = (containsZ) ? vertices[i + 2] : 0;\n\n            u = uvs[uvIndex];\n            v = uvs[uvIndex + 1];\n\n            color = (isColorArray) ? colors[colorIndex] : colors;\n            alpha = (isAlphaArray) ? alphas[colorIndex] : alphas;\n\n            normalX = 0;\n            normalY = 0;\n            normalZ = 0;\n\n            if (normals)\n            {\n                normalX = normals[i];\n                normalY = normals[i + 1];\n                normalZ = (containsZ) ? normals[i + 2] : 0;\n            }\n\n            result.vertices.push(new Vertex(x, y, z, u, v, color, alpha, normalX, normalY, normalZ));\n\n            uvIndex += 2;\n            colorIndex++;\n        }\n    }\n\n    for (i = 0; i < result.vertices.length; i += 3)\n    {\n        var vert1 = result.vertices[i];\n        var vert2 = result.vertices[i + 1];\n        var vert3 = result.vertices[i + 2];\n\n        result.faces.push(new Face(vert1, vert2, vert3));\n    }\n\n    return result;\n};\n\nmodule.exports = GenerateVerts;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/geom/mesh/GenerateVerts.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}}],"sources":{"node_modules/phaser/src/geom/mesh/GenerateVerts.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2013-2023 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Face = require('./Face');\nvar Vertex = require('./Vertex');\n\n/**\n * Generates a set of Face and Vertex objects by parsing the given data.\n *\n * This method will take vertex data in one of two formats, based on the `containsZ` parameter.\n *\n * If your vertex data are `x`, `y` pairs, then `containsZ` should be `false` (this is the default)\n *\n * If your vertex data is groups of `x`, `y` and `z` values, then the `containsZ` parameter must be true.\n *\n * The `uvs` parameter is a numeric array consisting of `u` and `v` pairs.\n *\n * The `normals` parameter is a numeric array consisting of `x`, `y` vertex normal values and, if `containsZ` is true, `z` values as well.\n *\n * The `indicies` parameter is an optional array that, if given, is an indexed list of vertices to be added.\n *\n * The `colors` parameter is an optional array, or single value, that if given sets the color of each vertex created.\n *\n * The `alphas` parameter is an optional array, or single value, that if given sets the alpha of each vertex created.\n *\n * When providing indexed data it is assumed that _all_ of the arrays are indexed, not just the vertices.\n *\n * The following example will create a 256 x 256 sized quad using an index array:\n *\n * ```javascript\n * const vertices = [\n *   -128, 128,\n *   128, 128,\n *   -128, -128,\n *   128, -128\n * ];\n *\n * const uvs = [\n *   0, 1,\n *   1, 1,\n *   0, 0,\n *   1, 0\n * ];\n *\n * const indices = [ 0, 2, 1, 2, 3, 1 ];\n *\n * GenerateVerts(vertices, uvs, indicies);\n * ```\n *\n * If the data is not indexed, it's assumed that the arrays all contain sequential data.\n *\n * @function Phaser.Geom.Mesh.GenerateVerts\n * @since 3.50.0\n *\n * @param {number[]} vertices - The vertices array. Either `xy` pairs, or `xyz` if the `containsZ` parameter is `true`.\n * @param {number[]} uvs - The UVs pairs array.\n * @param {number[]} [indicies] - Optional vertex indicies array. If you don't have one, pass `null` or an empty array.\n * @param {boolean} [containsZ=false] - Does the vertices data include a `z` component?\n * @param {number[]} [normals] - Optional vertex normals array. If you don't have one, pass `null` or an empty array.\n * @param {number|number[]} [colors=0xffffff] - An array of colors, one per vertex, or a single color value applied to all vertices.\n * @param {number|number[]} [alphas=1] - An array of alpha values, one per vertex, or a single alpha value applied to all vertices.\n * @param {boolean} [flipUV=false] - Flip the UV coordinates?\n *\n * @return {Phaser.Types.Geom.Mesh.GenerateVertsResult} The parsed Face and Vertex objects.\n */\nvar GenerateVerts = function (vertices, uvs, indicies, containsZ, normals, colors, alphas, flipUV)\n{\n    if (containsZ === undefined) { containsZ = false; }\n    if (colors === undefined) { colors = 0xffffff; }\n    if (alphas === undefined) { alphas = 1; }\n    if (flipUV === undefined) { flipUV = false; }\n\n    if (vertices.length !== uvs.length && !containsZ)\n    {\n        console.warn('GenerateVerts: vertices and uvs count not equal');\n        return;\n    }\n\n    var result = {\n        faces: [],\n        vertices: []\n    };\n\n    var i;\n\n    var x;\n    var y;\n    var z;\n\n    var u;\n    var v;\n\n    var color;\n    var alpha;\n\n    var normalX;\n    var normalY;\n    var normalZ;\n\n    var iInc = (containsZ) ? 3 : 2;\n\n    var isColorArray = Array.isArray(colors);\n    var isAlphaArray = Array.isArray(alphas);\n\n    if (Array.isArray(indicies) && indicies.length > 0)\n    {\n        for (i = 0; i < indicies.length; i++)\n        {\n            var index1 = indicies[i];\n            var index2 = indicies[i] * 2;\n            var index3 = indicies[i] * iInc;\n\n            x = vertices[index3];\n            y = vertices[index3 + 1];\n            z = (containsZ) ? vertices[index3 + 2] : 0;\n\n            u = uvs[index2];\n            v = uvs[index2 + 1];\n\n            if (flipUV)\n            {\n                v = 1 - v;\n            }\n\n            color = (isColorArray) ? colors[index1] : colors;\n            alpha = (isAlphaArray) ? alphas[index1] : alphas;\n\n            normalX = 0;\n            normalY = 0;\n            normalZ = 0;\n\n            if (normals)\n            {\n                normalX = normals[index3];\n                normalY = normals[index3 + 1];\n                normalZ = (containsZ) ? normals[index3 + 2] : 0;\n            }\n\n            result.vertices.push(new Vertex(x, y, z, u, v, color, alpha, normalX, normalY, normalZ));\n        }\n    }\n    else\n    {\n        var uvIndex = 0;\n        var colorIndex = 0;\n\n        for (i = 0; i < vertices.length; i += iInc)\n        {\n            x = vertices[i];\n            y = vertices[i + 1];\n            z = (containsZ) ? vertices[i + 2] : 0;\n\n            u = uvs[uvIndex];\n            v = uvs[uvIndex + 1];\n\n            color = (isColorArray) ? colors[colorIndex] : colors;\n            alpha = (isAlphaArray) ? alphas[colorIndex] : alphas;\n\n            normalX = 0;\n            normalY = 0;\n            normalZ = 0;\n\n            if (normals)\n            {\n                normalX = normals[i];\n                normalY = normals[i + 1];\n                normalZ = (containsZ) ? normals[i + 2] : 0;\n            }\n\n            result.vertices.push(new Vertex(x, y, z, u, v, color, alpha, normalX, normalY, normalZ));\n\n            uvIndex += 2;\n            colorIndex++;\n        }\n    }\n\n    for (i = 0; i < result.vertices.length; i += 3)\n    {\n        var vert1 = result.vertices[i];\n        var vert2 = result.vertices[i + 1];\n        var vert3 = result.vertices[i + 2];\n\n        result.faces.push(new Face(vert1, vert2, vert3));\n    }\n\n    return result;\n};\n\nmodule.exports = GenerateVerts;\n"},"lineCount":193}},"error":null,"hash":"59d6b873aa624130d485aa361440a6c8","cacheData":{"env":{}}}